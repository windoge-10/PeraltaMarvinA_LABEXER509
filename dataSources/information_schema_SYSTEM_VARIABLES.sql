INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LAST_GTID', '', null, 'COMPILE-TIME', null, 'SESSION ONLY', 'VARCHAR', 'The GTID of the last commit (if binlogging was enabled), or the empty string if none.', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Enable the performance schema.', null, null, null, 'OFF,ON', 'YES', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SQL_MODE', 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION', 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION', 'COMPILE-TIME', 'STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION', 'SESSION', 'SET', 'Sets the sql mode', null, null, null, 'REAL_AS_FLOAT,PIPES_AS_CONCAT,ANSI_QUOTES,IGNORE_SPACE,IGNORE_BAD_TABLE_OPTIONS,ONLY_FULL_GROUP_BY,NO_UNSIGNED_SUBTRACTION,NO_DIR_IN_CREATE,POSTGRESQL,ORACLE,MSSQL,DB2,MAXDB,NO_KEY_OPTIONS,NO_TABLE_OPTIONS,NO_FIELD_OPTIONS,MYSQL323,MYSQL40,ANSI,NO_AUTO_VALUE_ON_ZERO,NO_BACKSLASH_ESCAPES,STRICT_TRANS_TABLES,STRICT_ALL_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ALLOW_INVALID_DATES,ERROR_FOR_DIVISION_BY_ZERO,TRADITIONAL,NO_AUTO_CREATE_USER,HIGH_NOT_PRECEDENCE,NO_ENGINE_SUBSTITUTION,PAD_CHAR_TO_FULL_LENGTH,EMPTY_STRING_IS_NULL,SIMULTANEOUS_ASSIGNMENT,TIME_ROUND_FRACTIONAL', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_EVENTS_WAITS_HISTORY_LONG_SIZE', null, '-1', 'COMPILE-TIME', '-1', 'GLOBAL', 'BIGINT', 'Number of rows in EVENTS_WAITS_HISTORY_LONG. Use 0 to disable, -1 for automated sizing.', '-1', '1048576', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('QUERY_CACHE_TYPE', 'OFF', 'OFF', 'COMPILE-TIME', 'OFF', 'SESSION', 'ENUM', 'OFF = Don''t cache or retrieve results. ON = Cache all results except SELECT SQL_NO_CACHE ... queries. DEMAND = Cache only SELECT SQL_CACHE ... queries', null, null, null, 'OFF,ON,DEMAND', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_MAX_COND_CLASSES', null, '80', 'COMPILE-TIME', '80', 'GLOBAL', 'BIGINT UNSIGNED', 'Maximum number of condition instruments.', '0', '256', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('BINLOG_CACHE_SIZE', null, '32768', 'COMPILE-TIME', '32768', 'GLOBAL', 'BIGINT UNSIGNED', 'The size of the transactional cache for updates to transactional engines for the binary log. If you often use transactions containing many statements, you can increase this to get more performance', '4096', '18446744073709551615', '4096', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_MAX_COND_INSTANCES', null, '-1', 'COMPILE-TIME', '-1', 'GLOBAL', 'BIGINT', 'Maximum number of instrumented condition objects. Use 0 to disable, -1 for automated sizing.', '-1', '1048576', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MAX_TMP_TABLES', '32', '32', 'COMPILE-TIME', '32', 'SESSION', 'BIGINT UNSIGNED', 'Unused, will be removed.', '1', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_MAX_RWLOCK_CLASSES', null, '40', 'COMPILE-TIME', '40', 'GLOBAL', 'BIGINT UNSIGNED', 'Maximum number of rwlock instruments.', '0', '256', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_FLUSH_LOG_AT_TIMEOUT', null, '1', 'COMPILE-TIME', '1', 'GLOBAL', 'INT UNSIGNED', 'Write and flush logs every (n) second.', '0', '2700', '0', null, 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MAX_SORT_LENGTH', '1024', '1024', 'COMPILE-TIME', '1024', 'SESSION', 'BIGINT UNSIGNED', 'The number of bytes to use when sorting BLOB or TEXT values (only the first max_sort_length bytes of each value are used; the rest are ignored)', '4', '8388608', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SQL_LOG_OFF', 'OFF', 'OFF', 'COMPILE-TIME', 'OFF', 'SESSION', 'BOOLEAN', 'If set to 1 (0 is the default), no logging to the general query log is done for the client. Only clients with the SUPER privilege can update this variable.', null, null, null, 'OFF,ON', 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('COLUMN_COMPRESSION_ZLIB_LEVEL', '6', '6', 'COMPILE-TIME', '6', 'SESSION', 'INT UNSIGNED', 'zlib compression level (1 gives best speed, 9 gives best compression)', '0', '9', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_HOSTS_SIZE', null, '-1', 'COMPILE-TIME', '-1', 'GLOBAL', 'BIGINT', 'Maximum number of instrumented hosts. Use 0 to disable, -1 for automated sizing.', '-1', '1048576', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_MAX_MUTEX_INSTANCES', null, '-1', 'COMPILE-TIME', '-1', 'GLOBAL', 'BIGINT', 'Maximum number of instrumented MUTEX objects. Use 0 to disable, -1 for automated sizing.', '-1', '104857600', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MAX_INSERT_DELAYED_THREADS', '20', '20', 'COMPILE-TIME', '20', 'SESSION', 'BIGINT UNSIGNED', 'Don''t start more than this number of threads to handle INSERT DELAYED statements. If set to zero INSERT DELAYED will be not used', '0', '16384', '1', null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_MAX_RWLOCK_INSTANCES', null, '-1', 'COMPILE-TIME', '-1', 'GLOBAL', 'BIGINT', 'Maximum number of instrumented RWLOCK objects. Use 0 to disable, -1 for automated sizing.', '-1', '104857600', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_IGNORE_APPLY_ERRORS', null, '7', 'COMPILE-TIME', '7', 'GLOBAL', 'INT UNSIGNED', 'Ignore replication errors', '0', '7', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_MAX_MUTEX_CLASSES', null, '200', 'COMPILE-TIME', '200', 'GLOBAL', 'BIGINT UNSIGNED', 'Maximum number of mutex instruments.', '0', '256', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_STATS_TRANSIENT_SAMPLE_PAGES', null, '8', 'COMPILE-TIME', '8', 'GLOBAL', 'BIGINT UNSIGNED', 'The number of leaf index pages to sample when calculating transient statistics (if persistent statistics are not used, default 8)', '1', '18446744073709551615', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('NET_WRITE_TIMEOUT', '600', '60', 'COMPILE-TIME', '60', 'SESSION', 'BIGINT UNSIGNED', 'Number of seconds to wait for a block to be written to a connection before aborting the write', '1', '31536000', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SLOW_LAUNCH_TIME', null, '2', 'COMPILE-TIME', '2', 'GLOBAL', 'BIGINT UNSIGNED', 'If creating the thread takes longer than this value (in seconds), the Slow_launch_threads counter will be incremented', '0', '31536000', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_ACCOUNTS_SIZE', null, '-1', 'COMPILE-TIME', '-1', 'GLOBAL', 'BIGINT', 'Maximum number of instrumented user@host accounts. Use 0 to disable, -1 for automated sizing.', '-1', '1048576', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_PURGE_BATCH_SIZE', null, '300', 'COMPILE-TIME', '300', 'GLOBAL', 'BIGINT UNSIGNED', 'Number of UNDO log pages to purge in one batch from the history list.', '1', '5000', '0', null, 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LC_MESSAGES_DIR', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Directory where error messages are', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_ADAPTIVE_HASH_INDEX_PARTS', null, '8', 'COMPILE-TIME', '8', 'GLOBAL', 'BIGINT UNSIGNED', 'Number of InnoDB Adaptive Hash Index Partitions (default 8)', '1', '512', '0', null, 'YES', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_MAX_DIGEST_LENGTH', null, '1024', 'COMPILE-TIME', '1024', 'GLOBAL', 'BIGINT', 'Maximum length considered for digest text, when stored in performance_schema tables.', '0', '1048576', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('THREAD_POOL_OVERSUBSCRIBE', null, '3', 'COMPILE-TIME', '3', 'GLOBAL', 'INT UNSIGNED', 'How many additional active worker threads in a group are allowed.', '1', '1000', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_EVENTS_WAITS_HISTORY_SIZE', null, '-1', 'COMPILE-TIME', '-1', 'GLOBAL', 'BIGINT', 'Number of rows per thread in EVENTS_WAITS_HISTORY. Use 0 to disable, -1 for automated sizing.', '-1', '1024', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SLAVE_LOAD_TMPDIR', null, '/tmp', 'AUTO', '', 'GLOBAL', 'VARCHAR', 'The location where the slave should put its temporary files when replicating a LOAD DATA INFILE command', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_EVENTS_STAGES_HISTORY_SIZE', null, '-1', 'COMPILE-TIME', '-1', 'GLOBAL', 'BIGINT', 'Number of rows per thread in EVENTS_STAGES_HISTORY. Use 0 to disable, -1 for automated sizing.', '-1', '1024', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_FT_NUM_WORD_OPTIMIZE', null, '2000', 'COMPILE-TIME', '2000', 'GLOBAL', 'BIGINT UNSIGNED', 'InnoDB Fulltext search number of words to optimize for each optimize table call ', '1000', '10000', '0', null, 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_SR_STORE', null, 'table', 'COMPILE-TIME', 'table', 'GLOBAL', 'ENUM', 'Storage for streaming replication fragments', null, null, null, 'none,table', 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_DRUPAL_282555_WORKAROUND', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Enable a workaround to handle the cases where inserting a DEFAULT value into an auto-increment column could fail with duplicate key error', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_MAX_THREAD_INSTANCES', null, '-1', 'COMPILE-TIME', '-1', 'GLOBAL', 'BIGINT', 'Maximum number of instrumented threads. Use 0 to disable, -1 for automated sizing.', '-1', '1048576', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('TMP_MEMORY_TABLE_SIZE', '16777216', '16777216', 'COMPILE-TIME', '16777216', 'SESSION', 'BIGINT UNSIGNED', 'If an internal in-memory temporary table exceeds this size, MariaDB will automatically convert it to an on-disk MyISAM or Aria table. Same as tmp_table_size.', '1024', '18446744073709551615', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('BULK_INSERT_BUFFER_SIZE', '8388608', '8388608', 'COMPILE-TIME', '8388608', 'SESSION', 'BIGINT UNSIGNED', 'Size of tree cache used in bulk insert optimisation. Note that this is a limit per thread!', '0', '18446744073709551615', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('REPORT_HOST', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Hostname or IP of the slave to be reported to the master during slave registration. Will appear in the output of SHOW SLAVE HOSTS. Leave unset if you do not want the slave to register itself with the master. Note that it is not sufficient for the master to simply read the IP of the slave off the socket once the slave connects. Due to NAT and other routing issues, that IP may not be valid for connecting to the slave from the master or other hosts', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('RPL_SEMI_SYNC_SLAVE_KILL_CONN_TIMEOUT', null, '5', 'COMPILE-TIME', '5', 'GLOBAL', 'INT UNSIGNED', 'Timeout for the mysql connection used to kill the slave io_thread''s connection on master. This timeout comes into play when stop slave is executed.', '0', '4294967295', '1', null, 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_SORT_BUFFER_SIZE', null, '1048576', 'COMPILE-TIME', '1048576', 'GLOBAL', 'BIGINT UNSIGNED', 'Memory buffer size for index creation', '65536', '67108864', '0', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_SETUP_OBJECTS_SIZE', null, '100', 'COMPILE-TIME', '100', 'GLOBAL', 'BIGINT UNSIGNED', 'Maximum number of rows in SETUP_OBJECTS.', '0', '1048576', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_ROLLBACK_SEGMENTS', null, '128', 'COMPILE-TIME', '128', 'GLOBAL', 'BIGINT UNSIGNED', 'Number of undo logs to use (deprecated).', '1', '128', '0', null, 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('BINLOG_FILE_CACHE_SIZE', null, '16384', 'COMPILE-TIME', '16384', 'GLOBAL', 'BIGINT UNSIGNED', 'The size of file cache for the binary log', '8192', '18446744073709551615', '4096', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LARGE_FILES_SUPPORT', null, 'ON', 'COMPILE-TIME', null, 'GLOBAL', 'BOOLEAN', 'Whether mysqld was compiled with options for large file support', null, null, null, 'OFF,ON', 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('VERSION_COMPILE_MACHINE', null, 'x86_64', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'The machine type or architecture MariaDB was built on, for example i686.', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SLAVE_EXEC_MODE', null, 'STRICT', 'COMPILE-TIME', 'STRICT', 'GLOBAL', 'ENUM', 'How replication events should be executed. Legal values are STRICT (default) and IDEMPOTENT. In IDEMPOTENT mode, replication will not stop for operations that are idempotent. For example, in row based replication attempts to delete rows that doesn''t exist will be ignored. In STRICT mode, replication will stop on any unexpected difference between the master and the slave.', null, null, null, 'STRICT,IDEMPOTENT', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('BIND_ADDRESS', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'IP address to bind to.', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_AUTO_INCREMENT_CONTROL', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'To automatically control the assignment of autoincrement variables', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MAX_RECURSIVE_ITERATIONS', '4294967295', '4294967295', 'COMPILE-TIME', '4294967295', 'SESSION', 'BIGINT UNSIGNED', 'Maximum number of iterations when executing recursive queries', '0', '4294967295', '1', null, 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_BACKGROUND_SCRUB_DATA_COMPRESSED', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Enable scrubbing of compressed data by background threads (same as encryption_threads)', null, null, null, 'OFF,ON', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('CHARACTER_SET_CONNECTION', 'utf8mb4', 'utf8mb4', 'COMPILE-TIME', 'utf8mb4', 'SESSION', 'ENUM', 'The character set used for literals that do not have a character set introducer and for number-to-string conversion', null, null, null, null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('GROUP_CONCAT_MAX_LEN', '1048576', '1048576', 'COMPILE-TIME', '1048576', 'SESSION', 'BIGINT UNSIGNED', 'The maximum length of the result of function GROUP_CONCAT()', '4', '18446744073709551615', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('CONNECT_TIMEOUT', null, '10', 'COMPILE-TIME', '10', 'GLOBAL', 'BIGINT UNSIGNED', 'The number of seconds the mysqld server is waiting for a connect packet before responding with ''Bad handshake''', '2', '31536000', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('RANGE_ALLOC_BLOCK_SIZE', '4096', '4096', 'COMPILE-TIME', '4096', 'SESSION', 'BIGINT UNSIGNED', 'Allocation block size for storing ranges during optimization', '4096', '4294967295', '1024', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('BINLOG_STMT_CACHE_SIZE', null, '32768', 'COMPILE-TIME', '32768', 'GLOBAL', 'BIGINT UNSIGNED', 'The size of the statement cache for updates to non-transactional engines for the binary log. If you often use statements updating a great number of rows, you can increase this to get more performance.', '4096', '18446744073709551615', '4096', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('GTID_SLAVE_POS', null, '', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'The list of global transaction IDs that were last replicated on the server, one for each replication domain.', null, null, null, null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('CHARACTER_SET_RESULTS', 'utf8mb4', 'utf8mb4', 'COMPILE-TIME', 'utf8mb4', 'SESSION', 'ENUM', 'The character set used for returning query results to the client', null, null, null, null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_TMPDIR', '', '', 'COMPILE-TIME', '', 'SESSION', 'VARCHAR', 'Directory for temporary non-tablespace files.', null, null, null, null, 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('BINLOG_ROW_IMAGE', 'FULL', 'FULL', 'COMPILE-TIME', 'FULL', 'SESSION', 'ENUM', 'Controls whether rows should be logged in ''FULL'', ''NOBLOB'' or ''MINIMAL'' formats. ''FULL'', means that all columns in the before and after image are logged. ''NOBLOB'', means that mysqld avoids logging blob columns whenever possible (eg, blob column was not changed or is not part of primary key). ''MINIMAL'', means that a PK equivalent (PK columns or full row if there is no PK in the table) is logged in the before image, and only changed columns are logged in the after image. (Default: FULL).', null, null, null, 'MINIMAL,NOBLOB,FULL', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_ENCRYPTION_THREADS', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'INT UNSIGNED', 'Number of threads performing background key rotation and scrubbing', '0', '4294967295', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('EXPIRE_LOGS_DAYS', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'BIGINT UNSIGNED', 'If non-zero, binary logs will be purged after expire_logs_days days; possible purges happen at startup and at binary log rotation', '0', '99', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MYISAM_RECOVER_OPTIONS', null, 'BACKUP,QUICK', 'COMPILE-TIME', 'BACKUP,QUICK', 'GLOBAL', 'SET', 'Specifies how corrupted tables should be automatically repaired', null, null, null, 'DEFAULT,BACKUP,FORCE,QUICK,BACKUP_ALL,OFF', 'YES', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('DATETIME_FORMAT', null, '%Y-%m-%d %H:%i:%s', 'COMPILE-TIME', '%Y-%m-%d %H:%i:%s', 'GLOBAL', 'VARCHAR', 'The DATETIME format (ignored)', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('RPL_SEMI_SYNC_MASTER_TIMEOUT', null, '10000', 'COMPILE-TIME', '10000', 'GLOBAL', 'BIGINT UNSIGNED', 'The timeout value (in ms) for semi-synchronous replication in the master', '0', '18446744073709551615', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('JOIN_BUFFER_SIZE', '262144', '262144', 'COMPILE-TIME', '262144', 'SESSION', 'BIGINT UNSIGNED', 'The size of the buffer that is used for joins', '128', '18446744073709551615', '128', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LOW_PRIORITY_UPDATES', 'OFF', 'OFF', 'COMPILE-TIME', 'OFF', 'SESSION', 'BOOLEAN', 'INSERT/DELETE/UPDATE has lower priority than selects', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('EXPLICIT_DEFAULTS_FOR_TIMESTAMP', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'This option causes CREATE TABLE to create all TIMESTAMP columns as NULL with DEFAULT NULL attribute, Without this option, TIMESTAMP columns are NOT NULL and have implicit DEFAULT clauses.', null, null, null, 'OFF,ON', 'YES', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('REPORT_PASSWORD', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'The account password of the slave to be reported to the master during slave registration', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('COMPLETION_TYPE', 'NO_CHAIN', 'NO_CHAIN', 'COMPILE-TIME', 'NO_CHAIN', 'SESSION', 'ENUM', 'The transaction completion type', null, null, null, 'NO_CHAIN,CHAIN,RELEASE', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_DBUG_OPTION', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'DBUG options to provider library', null, null, null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_EVENTS_STAGES_HISTORY_LONG_SIZE', null, '-1', 'COMPILE-TIME', '-1', 'GLOBAL', 'BIGINT', 'Number of rows in EVENTS_STAGES_HISTORY_LONG. Use 0 to disable, -1 for automated sizing.', '-1', '1048576', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SQL_BIG_SELECTS', 'ON', 'ON', 'COMPILE-TIME', 'OFF', 'SESSION', 'BOOLEAN', 'If set to 0, MariaDB will not perform large SELECTs. See max_join_size for details. If max_join_size is set to anything but DEFAULT, sql_big_selects is automatically set to 0. If sql_big_selects is again set, max_join_size will be ignored.', null, null, null, 'OFF,ON', 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LARGE_PAGES', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Enable support for large pages', null, null, null, 'OFF,ON', 'YES', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('TRANSACTION_ALLOC_BLOCK_SIZE', '8192', '8192', 'COMPILE-TIME', '8192', 'SESSION', 'BIGINT UNSIGNED', 'Allocation block size for transactions to be stored in binary log', '1024', '134217728', '1024', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('THREAD_HANDLING', null, 'one-thread-per-connection', 'COMPILE-TIME', 'one-thread-per-connection', 'GLOBAL', 'ENUM', 'Define threads usage for handling queries', null, null, null, 'one-thread-per-connection,no-threads,pool-of-threads', 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_FLUSHING_AVG_LOOPS', null, '30', 'COMPILE-TIME', '30', 'GLOBAL', 'BIGINT UNSIGNED', 'Number of iterations over which the background flushing is averaged.', '1', '1000', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('GTID_CURRENT_POS', null, '', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'Current GTID position of the server. Per replication domain, this is either the last GTID replicated by a slave thread, or the GTID logged to the binary log, whichever is most recent.', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SYNC_FRM', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'Sync .frm files to disk on creation', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PSEUDO_THREAD_ID', '253', null, 'COMPILE-TIME', '0', 'SESSION ONLY', 'BIGINT UNSIGNED', 'This variable is for internal server use', '0', '18446744073709551615', '1', null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('BASEDIR', null, '/usr/', 'ENVIRONMENT', '', 'GLOBAL', 'VARCHAR', 'Path to installation directory. All paths are usually resolved relative to this', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_MAX_STAGE_CLASSES', null, '160', 'COMPILE-TIME', '160', 'GLOBAL', 'BIGINT UNSIGNED', 'Maximum number of stage instruments.', '0', '256', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_SCRUB_LOG', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Enable background redo log (ib_logfile0, ib_logfile1...) scrubbing', null, null, null, 'OFF,ON', 'YES', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INIT_SLAVE', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Command(s) that are executed by a slave server each time the SQL thread starts', null, null, null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_IO_CAPACITY_MAX', null, '2000', 'COMPILE-TIME', '18446744073709551615', 'GLOBAL', 'BIGINT UNSIGNED', 'Limit to which innodb_io_capacity can be inflated.', '100', '18446744073709551615', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_MAX_WS_SIZE', null, '2147483647', 'COMPILE-TIME', '2147483647', 'GLOBAL', 'BIGINT UNSIGNED', 'Max write set size (bytes)', '1024', '2147483647', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_IO_CAPACITY', null, '200', 'COMPILE-TIME', '200', 'GLOBAL', 'BIGINT UNSIGNED', 'Number of IOPs the server can do. Tunes the background IO rate', '100', '18446744073709551615', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MAX_WRITE_LOCK_COUNT', null, '4294967295', 'COMPILE-TIME', '4294967295', 'GLOBAL', 'BIGINT UNSIGNED', 'After this many write locks, allow some read locks to run in between', '1', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_CLUSTER_ADDRESS', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Address to initially connect to cluster', null, null, null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MAX_SP_RECURSION_DEPTH', '0', '0', 'COMPILE-TIME', '0', 'SESSION', 'BIGINT UNSIGNED', 'Maximum stored procedure recursion depth', '0', '255', '1', null, 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MYISAM_REPAIR_THREADS', '1', '1', 'COMPILE-TIME', '1', 'SESSION', 'BIGINT UNSIGNED', 'If larger than 1, when repairing a MyISAM table all indexes will be created in parallel, with one thread per index. The value of 1 disables parallel repair', '1', '18446744073709551615', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('AUTOMATIC_SP_PRIVILEGES', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'Creating and dropping stored procedures alters ACLs', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LOG_SLOW_SLAVE_STATEMENTS', 'ON', 'ON', 'COMPILE-TIME', 'ON', 'SESSION', 'BOOLEAN', 'Log slow statements executed by slave thread to the slow log if it is open. Resets or sets the option ''slave'' in log_slow_disabled_statements', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('CONCURRENT_INSERT', null, 'AUTO', 'COMPILE-TIME', 'AUTO', 'GLOBAL', 'ENUM', 'Use concurrent insert with MyISAM', null, null, null, 'NEVER,AUTO,ALWAYS', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_COMPRESSION_DEFAULT', 'OFF', 'OFF', 'COMPILE-TIME', 'OFF', 'SESSION', 'BOOLEAN', 'Is compression the default for new tables', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('FT_QUERY_EXPANSION_LIMIT', null, '20', 'COMPILE-TIME', '20', 'GLOBAL', 'BIGINT UNSIGNED', 'Number of best matches to use for query expansion', '0', '1000', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_AUTOEXTEND_INCREMENT', null, '64', 'COMPILE-TIME', '64', 'GLOBAL', 'BIGINT UNSIGNED', 'Data file autoextend increment in megabytes', '1', '1000', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LOG_QUERIES_NOT_USING_INDEXES', 'OFF', 'OFF', 'COMPILE-TIME', 'OFF', 'SESSION', 'BOOLEAN', 'Log queries that are executed without benefit of any index to the slow log if it is open. Same as log_slow_filter=''not_using_index''', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MYISAM_DATA_POINTER_SIZE', null, '6', 'COMPILE-TIME', '6', 'GLOBAL', 'BIGINT UNSIGNED', 'Default pointer size to be used for MyISAM tables', '2', '7', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('KEY_CACHE_FILE_HASH_SIZE', null, '512', 'COMPILE-TIME', '512', 'GLOBAL', 'BIGINT UNSIGNED', 'Number of hash buckets for open and changed files.  If you have a lot of MyISAM files open you should increase this for faster flush of changes. A good value is probably 1/10 of number of possible open MyISAM files.', '128', '16384', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('RPL_SEMI_SYNC_SLAVE_DELAY_MASTER', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Only write master info file when ack is needed.', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_DIGESTS_SIZE', null, '-1', 'COMPILE-TIME', '-1', 'GLOBAL', 'BIGINT', 'Size of the statement digest. Use 0 to disable, -1 for automated sizing.', '-1', '200', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SQL_AUTO_IS_NULL', 'OFF', 'OFF', 'COMPILE-TIME', 'OFF', 'SESSION', 'BOOLEAN', 'If set to 1, the query SELECT * FROM table_name WHERE auto_increment_column IS NULL will return an auto-increment that has just been successfully inserted, the same as the LAST_INSERT_ID() function. Some ODBC programs make use of this IS NULL comparison.', null, null, null, 'OFF,ON', 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('USE_STAT_TABLES', 'PREFERABLY_FOR_QUERIES', 'PREFERABLY_FOR_QUERIES', 'COMPILE-TIME', 'PREFERABLY_FOR_QUERIES', 'SESSION', 'ENUM', 'Specifies how to use system statistics tables', null, null, null, 'NEVER,COMPLEMENTARY,PREFERABLY,COMPLEMENTARY_FOR_QUERIES,PREFERABLY_FOR_QUERIES', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ARIA_USED_FOR_TEMP_TABLES', null, 'ON', 'COMPILE-TIME', null, 'GLOBAL', 'BOOLEAN', 'Whether temporary tables should be MyISAM or Aria', null, null, null, 'OFF,ON', 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LOCK_WAIT_TIMEOUT', '86400', '86400', 'COMPILE-TIME', '86400', 'SESSION', 'BIGINT UNSIGNED', 'Timeout in seconds to wait for a lock before returning an error.', '0', '31536000', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('GTID_DOMAIN_ID', '0', '0', 'COMPILE-TIME', '0', 'SESSION', 'INT UNSIGNED', 'Used with global transaction ID to identify logically independent replication streams. When events can propagate through multiple parallel paths (for example multiple masters), each independent source server must use a distinct domain_id. For simple tree-shaped replication topologies, it can be left at its default, 0.', '0', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('DELAY_KEY_WRITE', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'ENUM', 'Specifies how MyISAM tables handles CREATE TABLE DELAY_KEY_WRITE. If set to ON, the default, any DELAY KEY WRITEs are honored. The key buffer is then flushed only when the table closes, speeding up writes. MyISAM tables should be automatically checked upon startup in this case, and --external locking should not be used, as it can lead to index corruption. If set to OFF, DELAY KEY WRITEs are ignored, while if set to ALL, all new opened tables are treated as if created with DELAY KEY WRITEs enabled.', null, null, null, 'OFF,ON,ALL', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_RETRY_AUTOCOMMIT', '1', '1', 'COMPILE-TIME', '1', 'SESSION', 'BIGINT UNSIGNED', 'Max number of times to retry a failed autocommit statement', '0', '10000', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('DELAYED_INSERT_LIMIT', null, '100', 'COMPILE-TIME', '100', 'GLOBAL', 'BIGINT UNSIGNED', 'After inserting delayed_insert_limit rows, the INSERT DELAYED handler will check if there are any SELECT statements pending. If so, it allows these to execute before continuing.', '1', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_STATUS_OUTPUT_LOCKS', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Enable InnoDB lock monitor output to the error log. Requires innodb_status_output=ON.', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MAX_STATEMENT_TIME', '0.000000', '0.000000', 'COMPILE-TIME', '0.000000', 'SESSION', 'DOUBLE', 'A query that has taken more than max_statement_time seconds will be aborted. The argument will be treated as a decimal value with microsecond precision. A value of 0 (default) means no timeout', '0', '31536000', null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('QUERY_PREALLOC_SIZE', '24576', '24576', 'COMPILE-TIME', '24576', 'SESSION', 'BIGINT UNSIGNED', 'Persistent buffer for query parsing and execution', '1024', '4294967295', '1024', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_SETUP_ACTORS_SIZE', null, '100', 'COMPILE-TIME', '100', 'GLOBAL', 'BIGINT UNSIGNED', 'Maximum number of rows in SETUP_ACTORS.', '0', '1024', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SORT_BUFFER_SIZE', '2097152', '2097152', 'COMPILE-TIME', '2097152', 'SESSION', 'BIGINT UNSIGNED', 'Each thread that needs to do a sort allocates a buffer of this size', '1024', '18446744073709551615', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('BINLOG_ANNOTATE_ROW_EVENTS', 'ON', 'ON', 'COMPILE-TIME', 'ON', 'SESSION', 'BOOLEAN', 'Tells the master to annotate RBR events with the statement that caused these events', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_ROLLBACK_ON_TIMEOUT', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Roll back the complete transaction on lock wait timeout, for 4.x compatibility (disabled by default)', null, null, null, 'OFF,ON', 'YES', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('CHARACTER_SET_CLIENT', 'utf8mb4', 'utf8mb4', 'COMPILE-TIME', 'utf8mb4', 'SESSION', 'ENUM', 'The character set for statements that arrive from the client', null, null, null, null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('STANDARD_COMPLIANT_CTE', 'ON', 'ON', 'COMPILE-TIME', 'ON', 'SESSION', 'BOOLEAN', 'Allow only CTEs compliant to SQL standard', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('COLUMN_COMPRESSION_ZLIB_WRAP', 'OFF', 'OFF', 'COMPILE-TIME', 'OFF', 'SESSION', 'BOOLEAN', 'Generate zlib header and trailer and compute adler32 check value. It can be used with storage engines that don''t provide data integrity verification to detect data corruption.', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ARIA_REPAIR_THREADS', '1', '1', 'COMPILE-TIME', '1', 'SESSION', 'BIGINT UNSIGNED', 'Number of threads to use when repairing Aria tables. The value of 1 disables parallel repair.', '1', '128', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('CHARACTER_SET_SYSTEM', null, 'utf8', 'COMPILE-TIME', null, 'GLOBAL', 'ENUM', 'The character set used by the server for storing identifiers', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('JOIN_BUFFER_SPACE_LIMIT', '2097152', '2097152', 'COMPILE-TIME', '2097152', 'SESSION', 'BIGINT UNSIGNED', 'The limit of the space for all join buffers used by a query', '2048', '18446744073709551615', '2048', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SLAVE_MAX_ALLOWED_PACKET', null, '1073741824', 'COMPILE-TIME', '1073741824', 'GLOBAL', 'BIGINT UNSIGNED', 'The maximum packet length to sent successfully from the master to slave.', '1024', '1073741824', '1024', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_FILE_FORMAT', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Deprecated parameter with no effect.', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MAX_CONNECT_ERRORS', null, '100', 'COMPILE-TIME', '100', 'GLOBAL', 'BIGINT UNSIGNED', 'If there is more than this number of interrupted connections from a host this host will be blocked from further connections', '1', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PROGRESS_REPORT_TIME', '5', '5', 'COMPILE-TIME', '5', 'SESSION', 'BIGINT UNSIGNED', 'Seconds between sending progress reports to the client for time-consuming statements. Set to 0 to disable progress reporting.', '0', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('CHARACTER_SETS_DIR', null, '/usr/share/mysql/charsets/', 'AUTO', '', 'GLOBAL', 'VARCHAR', 'Directory where character sets are', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('REPLICATE_WILD_DO_TABLE', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Tells the slave thread to restrict replication to statements where any of the updated tables match the specified database and table name patterns.', null, null, null, null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ROWID_MERGE_BUFF_SIZE', '8388608', '8388608', 'COMPILE-TIME', '8388608', 'SESSION', 'BIGINT UNSIGNED', 'The size of the buffers used [NOT] IN evaluation via partial matching', '0', '9223372036854775807', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('REPLICATE_ANNOTATE_ROW_EVENTS', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'Tells the slave to write annotate rows events received from the master to its own binary log. Ignored if log_slave_updates is not set', null, null, null, 'OFF,ON', 'YES', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MAX_CONNECTIONS', null, '151', 'COMPILE-TIME', '151', 'GLOBAL', 'BIGINT UNSIGNED', 'The number of simultaneous clients allowed', '10', '100000', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('CHARACTER_SET_SERVER', 'utf8mb4', 'utf8mb4', 'COMPILE-TIME', 'utf8mb4', 'SESSION', 'ENUM', 'The default character set', null, null, null, null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_MAX_FILE_CLASSES', null, '50', 'COMPILE-TIME', '50', 'GLOBAL', 'BIGINT UNSIGNED', 'Maximum number of file instruments.', '0', '256', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('RAND_SEED1', '745624812', null, 'COMPILE-TIME', '0', 'SESSION ONLY', 'BIGINT UNSIGNED', 'Sets the internal state of the RAND() generator for replication purposes', '0', '18446744073709551615', '1', null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_MAX_THREAD_CLASSES', null, '50', 'COMPILE-TIME', '50', 'GLOBAL', 'BIGINT UNSIGNED', 'Maximum number of thread instruments.', '0', '256', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_PURGE_RSEG_TRUNCATE_FREQUENCY', null, '128', 'COMPILE-TIME', '128', 'GLOBAL', 'BIGINT UNSIGNED', 'Dictates rate at which UNDO records are purged. Value N means purge rollback segment(s) on every Nth iteration of purge invocation', '1', '128', '0', null, 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('REPLICATE_IGNORE_TABLE', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Tells the slave thread not to replicate any statement that updates the specified table, even if any other tables might be updated by the same statement.', null, null, null, null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('FT_MAX_WORD_LEN', null, '84', 'COMPILE-TIME', '84', 'GLOBAL', 'BIGINT UNSIGNED', 'The maximum length of the word to be included in a FULLTEXT index. Note: FULLTEXT indexes must be rebuilt after changing this variable', '10', '84', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('BINLOG_DIRECT_NON_TRANSACTIONAL_UPDATES', 'OFF', 'OFF', 'COMPILE-TIME', 'OFF', 'SESSION', 'BOOLEAN', 'Causes updates to non-transactional engines using statement format to be written directly to binary log. Before using this option make sure that there are no dependencies between transactional and non-transactional tables such as in the statement INSERT INTO t_myisam SELECT * FROM t_innodb; otherwise, slaves may diverge from the master.', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('DELAYED_QUEUE_SIZE', null, '1000', 'COMPILE-TIME', '1000', 'GLOBAL', 'BIGINT UNSIGNED', 'What size queue (in rows) should be allocated for handling INSERT DELAYED. If the queue becomes full, any client that does INSERT DELAYED will wait until there is room in the queue again', '1', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_STRICT_MODE', 'ON', 'ON', 'COMPILE-TIME', 'ON', 'SESSION', 'BOOLEAN', 'Use strict mode when evaluating create options.', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('QUERY_CACHE_LIMIT', null, '1048576', 'COMPILE-TIME', '1048576', 'GLOBAL', 'BIGINT UNSIGNED', 'Don''t cache results that are bigger than this', '0', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ALTER_ALGORITHM', 'DEFAULT', 'DEFAULT', 'COMPILE-TIME', 'DEFAULT', 'SESSION', 'ENUM', 'Specify the alter table algorithm', null, null, null, 'DEFAULT,COPY,INPLACE,NOCOPY,INSTANT', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MAX_DIGEST_LENGTH', null, '1024', 'COMPILE-TIME', '1024', 'GLOBAL', 'INT UNSIGNED', 'Maximum length considered for digest text.', '0', '1048576', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_REJECT_QUERIES', null, 'NONE', 'COMPILE-TIME', 'NONE', 'GLOBAL', 'ENUM', 'Variable to set to reject queries', null, null, null, 'NONE,ALL,ALL_KILL', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('HAVE_GEOMETRY', null, 'YES', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'If the server supports spatial data types, will be set to YES, otherwise will be set to NO.', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_CHECKSUM_ALGORITHM', null, 'crc32', 'COMPILE-TIME', 'crc32', 'GLOBAL', 'ENUM', 'The algorithm InnoDB uses for page checksumming. Possible values are FULL_CRC32 for new files, always use CRC-32C; for old, see CRC32 below; STRICT_FULL_CRC32 for new files, always use CRC-32C; for old, see STRICT_CRC32 below; CRC32 write crc32, allow any of the other checksums to match when reading; STRICT_CRC32 write crc32, do not allow other algorithms to match when reading; INNODB write a software calculated checksum, allow any other checksums to match when reading; STRICT_INNODB write a software calculated checksum, do not allow other algorithms to match when reading; NONE write a constant magic number, do not do any checksum verification when reading (same as innodb_checksums=OFF); STRICT_NONE write a constant magic number, do not allow values other than that magic number when reading; Files updated when this option is set to crc32 or strict_crc32 will not be readable by MariaDB versions older than 10.0.4; new files created with full_crc32 are readable by MariaDB 10.4.3+', null, null, null, 'crc32,strict_crc32,innodb,strict_innodb,none,strict_none,full_crc32,strict_full_crc32', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_USERS_SIZE', null, '-1', 'COMPILE-TIME', '-1', 'GLOBAL', 'BIGINT', 'Maximum number of instrumented users. Use 0 to disable, -1 for automated sizing.', '-1', '1048576', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LOG_BIN_COMPRESS', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Whether the binary log can be compressed', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LOG_SLOW_VERBOSITY', '', '', 'COMPILE-TIME', '', 'SESSION', 'SET', 'Verbosity level for the slow log', null, null, null, 'innodb,query_plan,explain', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SYSTEM_VERSIONING_ASOF', 'DEFAULT', 'DEFAULT', 'COMPILE-TIME', 'DEFAULT', 'SESSION', 'VARCHAR', 'Default value for the FOR SYSTEM_TIME AS OF clause', null, null, null, 'DEFAULT', 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('THREAD_POOL_IDLE_TIMEOUT', null, '60', 'COMPILE-TIME', '60', 'GLOBAL', 'INT UNSIGNED', 'Timeout in seconds for an idle thread in the thread pool.Worker thread will be shut down after timeout', '1', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SLAVE_PARALLEL_THREADS', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'BIGINT UNSIGNED', 'If non-zero, number of threads to spawn to apply in parallel events on the slave that were group-committed on the master or were logged with GTID in different replication domains. Note that these threads are in addition to the IO and SQL threads, which are always created by a replication slave', '0', '16383', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_LOCK_SCHEDULE_ALGORITHM', null, 'fcfs', 'COMPILE-TIME', 'fcfs', 'GLOBAL', 'ENUM', 'The algorithm Innodb uses for deciding which locks to grant next when a lock is released. Possible values are FCFS grant the locks in First-Come-First-Served order; VATS use the Variance-Aware-Transaction-Scheduling algorithm, which uses an Eldest-Transaction-First heuristic.', null, null, null, 'fcfs,vats', 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MAX_RELAY_LOG_SIZE', '1073741824', '1073741824', 'AUTO', '1073741824', 'SESSION', 'BIGINT UNSIGNED', 'relay log will be rotated automatically when the size exceeds this value.  If 0 at startup, it''s set to max_binlog_size', '4096', '1073741824', '4096', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_SLAVE_FK_CHECKS', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'Should slave thread do foreign key constraint checks', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('DATADIR', null, '/var/lib/mysql/', 'COMPILE-TIME', '/var/lib/mysql/', 'GLOBAL', 'VARCHAR', 'Path to the database root directory', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('TABLE_OPEN_CACHE_INSTANCES', null, '8', 'COMPILE-TIME', '8', 'GLOBAL', 'INT UNSIGNED', 'Maximum number of table cache instances', '1', '64', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SQL_BUFFER_RESULT', 'OFF', 'OFF', 'COMPILE-TIME', 'OFF', 'SESSION', 'BOOLEAN', 'If set to 1 (0 is default), results from SELECT statements are always placed into temporary tables. This can help the server when it takes a long time to send the results to the client by allowing the table locks to be freed early.', null, null, null, 'OFF,ON', 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('RELAY_LOG_INFO_FILE', null, 'relay-log.info', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'The location and name of the file that remembers where the SQL replication thread is in the relay logs.', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_EVENTS_STATEMENTS_HISTORY_SIZE', null, '-1', 'COMPILE-TIME', '-1', 'GLOBAL', 'BIGINT', 'Number of rows per thread in EVENTS_STATEMENTS_HISTORY. Use 0 to disable, -1 for automated sizing.', '-1', '1024', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_AUTOINC_LOCK_MODE', null, '1', 'COMPILE-TIME', '1', 'GLOBAL', 'BIGINT', 'The AUTOINC lock modes supported by InnoDB: 0 => Old style AUTOINC locking (for backward compatibility); 1 => New style AUTOINC locking; 2 => No AUTOINC locking (unsafe for SBR)', '0', '2', '0', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LOG_SLOW_ADMIN_STATEMENTS', 'ON', 'ON', 'COMPILE-TIME', 'ON', 'SESSION', 'BOOLEAN', 'Log slow OPTIMIZE, ANALYZE, ALTER and other administrative statements to the slow log if it is open.  Resets or sets the option ''admin'' in log_slow_disabled_statements', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LC_MESSAGES', 'en_US', 'en_US', 'COMPILE-TIME', 'en_US', 'SESSION', 'ENUM', 'Set the language used for the error messages', null, null, null, null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MAX_HEAP_TABLE_SIZE', '16777216', '16777216', 'COMPILE-TIME', '16777216', 'SESSION', 'BIGINT UNSIGNED', 'Don''t allow creation of heap tables bigger than this', '16384', '18446744073709551615', '1024', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LOWER_CASE_TABLE_NAMES', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'INT UNSIGNED', 'If set to 1 table names are stored in lowercase on disk and table names will be case-insensitive.  Should be set to 2 if you are using a case insensitive file system', '0', '2', '1', null, 'YES', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('KEY_CACHE_DIVISION_LIMIT', null, '100', 'COMPILE-TIME', '100', 'GLOBAL', 'BIGINT UNSIGNED', 'The minimum percentage of warm blocks in key cache', '1', '100', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_BUFFER_POOL_FILENAME', null, 'ib_buffer_pool', 'COMPILE-TIME', 'ib_buffer_pool', 'GLOBAL', 'VARCHAR', 'Filename to/from which to dump/load the InnoDB buffer pool', null, null, null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_MAX_STATEMENT_CLASSES', null, '202', 'COMPILE-TIME', '202', 'GLOBAL', 'BIGINT UNSIGNED', 'Maximum number of statement instruments.', '0', '256', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_MAX_PURGE_LAG_DELAY', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'BIGINT UNSIGNED', 'Maximum delay of user threads in micro-seconds', '0', '10000000', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MAX_BINLOG_CACHE_SIZE', null, '18446744073709547520', 'COMPILE-TIME', '18446744073709547520', 'GLOBAL', 'BIGINT UNSIGNED', 'Sets the total size of the transactional cache', '4096', '18446744073709551615', '4096', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_BUFFER_POOL_DUMP_NOW', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Trigger an immediate dump of the buffer pool into a file named @@innodb_buffer_pool_filename', null, null, null, 'OFF,ON', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('TMP_TABLE_SIZE', '16777216', '16777216', 'COMPILE-TIME', '16777216', 'SESSION', 'BIGINT UNSIGNED', 'Alias for tmp_memory_table_size. If an internal in-memory temporary table exceeds this size, MariaDB will automatically convert it to an on-disk MyISAM or Aria table.', '1024', '18446744073709551615', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_BACKGROUND_SCRUB_DATA_INTERVAL', null, '604800', 'COMPILE-TIME', '604800', 'GLOBAL', 'INT UNSIGNED', 'scrub spaces that were last scrubbed longer than  innodb_background_scrub_data_interval seconds ago', '1', '4294967295', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LONG_QUERY_TIME', '10.000000', '10.000000', 'COMPILE-TIME', '10.000000', 'SESSION', 'DOUBLE', 'Log all queries that have taken more than long_query_time seconds to execute to the slow query log file. The argument will be treated as a decimal value with microsecond precision', '0', '31536000', null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_STATUS_OUTPUT', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Enable InnoDB monitor output to the error log.', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MAX_USER_CONNECTIONS', '0', '0', 'COMPILE-TIME', '0', 'SESSION', 'INT', 'The maximum number of active connections for a single user (0 = no limit)', '-1', '2147483647', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_UNDO_LOG_TRUNCATE', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Enable or Disable Truncate of UNDO tablespace.', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ARIA_LOG_PURGE_TYPE', null, 'immediate', 'COMPILE-TIME', 'immediate', 'GLOBAL', 'ENUM', 'Specifies how Aria transactional log will be purged', null, null, null, 'immediate,external,at_flush', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_ADAPTIVE_HASH_INDEX', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'Enable InnoDB adaptive hash index (enabled by default).  Disable with --skip-innodb-adaptive-hash-index.', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('OPTIMIZER_USE_CONDITION_SELECTIVITY', '4', '4', 'COMPILE-TIME', '4', 'SESSION', 'BIGINT UNSIGNED', 'Controls selectivity of which conditions the optimizer takes into account to calculate cardinality of a partial join when it searches for the best execution plan Meaning: 1 - use selectivity of index backed range conditions to calculate the cardinality of a partial join if the last joined table is accessed by full table scan or an index scan, 2 - use selectivity of index backed range conditions to calculate the cardinality of a partial join in any case, 3 - additionally always use selectivity of range conditions that are not backed by any index to calculate the cardinality of a partial join, 4 - use histograms to calculate selectivity of range conditions that are not backed by any index to calculate the cardinality of a partial join.5 - additionally use selectivity of certain non-range predicates calculated on record samples', '1', '5', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_ENCRYPT_LOG', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Enable redo log encryption', null, null, null, 'OFF,ON', 'YES', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('GTID_SEQ_NO', '0', null, 'COMPILE-TIME', '0', 'SESSION ONLY', 'BIGINT UNSIGNED', 'Internal server usage, for replication with global transaction id. When set, next event group logged to the binary log will use this sequence number, not generate a new one, thus allowing to preserve master''s GTID in slave''s binlog.', '0', '18446744073709551615', '1', null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('EXTRA_MAX_CONNECTIONS', null, '1', 'COMPILE-TIME', '1', 'GLOBAL', 'BIGINT UNSIGNED', 'The number of connections on extra-port', '1', '100000', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MAX_LENGTH_FOR_SORT_DATA', '1024', '1024', 'COMPILE-TIME', '1024', 'SESSION', 'BIGINT UNSIGNED', 'Max number of bytes in sorted records', '4', '8388608', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('STORED_PROGRAM_CACHE', null, '256', 'COMPILE-TIME', '256', 'GLOBAL', 'BIGINT UNSIGNED', 'The soft upper limit for number of cached stored routines for one connection.', '0', '524288', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('FLUSH', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Flush MyISAM tables to disk between SQL commands', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SSL_CRL', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'CRL file in PEM format (check OpenSSL docs, implies --ssl)', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('CHARACTER_SET_FILESYSTEM', 'binary', 'binary', 'COMPILE-TIME', 'binary', 'SESSION', 'ENUM', 'The filesystem character set', null, null, null, null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SLOW_QUERY_LOG', 'OFF', 'OFF', 'COMPILE-TIME', 'OFF', 'SESSION', 'BOOLEAN', 'Log slow queries to a table or log file. Defaults logging to a file ''hostname''-slow.log or a table mysql.slow_log if --log-output=TABLE is used. Must be enabled to activate other slow log options.', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('BIG_TABLES', 'OFF', 'OFF', 'COMPILE-TIME', 'OFF', 'SESSION', 'BOOLEAN', 'Old variable, which if set to 1, allows large result sets by saving all temporary sets to disk, avoiding ''table full'' errors. No longer needed, as the server now handles this automatically. sql_big_tables is a synonym.', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MAX_SESSION_MEM_USED', '9223372036854775807', '9223372036854775807', 'COMPILE-TIME', '9223372036854775807', 'SESSION', 'BIGINT UNSIGNED', 'Amount of memory a single user session is allowed to allocate. This limits the value of the session variable MEM_USED', '8192', '18446744073709551615', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PROXY_USER', '', null, 'COMPILE-TIME', null, 'SESSION ONLY', 'VARCHAR', 'The proxy user account name used when logging in', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_DATA_HOME_DIR', null, '/var/lib/mysql/', 'COMPILE-TIME', '/var/lib/mysql/', 'GLOBAL', 'VARCHAR', 'home directory for wsrep provider', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MAX_LONG_DATA_SIZE', null, '16777216', 'AUTO', '1048576', 'GLOBAL', 'BIGINT UNSIGNED', 'The maximum BLOB length to send to server from mysql_send_long_data API. Deprecated option; use max_allowed_packet instead.', '1024', '4294967295', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_LOG_COMPRESSED_PAGES', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'Enables/disables the logging of entire compressed page images. InnoDB logs the compressed pages to prevent corruption if the zlib compression algorithm changes. When turned OFF, InnoDB will assume that the zlib compression algorithm doesn''t change.', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LOG_WARNINGS', '2', '2', 'COMPILE-TIME', '2', 'SESSION', 'BIGINT UNSIGNED', 'Log some not critical warnings to the general log file.Value can be between 0 and 11. Higher values mean more verbosity', '0', '4294967295', '1', null, 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_DISABLE_SORT_FILE_CACHE', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Whether to disable OS system file cache for sort I/O', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_SESSION_CONNECT_ATTRS_SIZE', null, '-1', 'COMPILE-TIME', '-1', 'GLOBAL', 'BIGINT', 'Size of session attribute string buffer per thread. Use 0 to disable, -1 for automated sizing.', '-1', '1048576', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_ENCRYPTION_ROTATION_IOPS', null, '100', 'COMPILE-TIME', '100', 'GLOBAL', 'INT UNSIGNED', 'Use this many iops for background key rotation', '0', '4294967295', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('EVENT_SCHEDULER', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'ENUM', 'Enable the event scheduler. Possible values are ON, OFF, and DISABLED (keep the event scheduler completely deactivated, it cannot be activated run-time)', null, null, null, 'OFF,ON,DISABLED,ORIGINAL', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('HAVE_DYNAMIC_LOADING', null, 'YES', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'If the server supports dynamic loading of plugins, will be set to YES, otherwise will be set to NO.', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('REPORT_PORT', null, '3306', 'AUTO', '0', 'GLOBAL', 'INT UNSIGNED', 'Port for connecting to slave reported to the master during slave registration. Set it only if the slave is listening on a non-default port or if you have a special tunnel from the master or other clients to the slave. If not sure, leave this option unset', '0', '4294967295', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_SST_METHOD', null, 'rsync', 'COMPILE-TIME', 'rsync', 'GLOBAL', 'VARCHAR', 'State snapshot transfer method', null, null, null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_STATS_ON_METADATA', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Enable statistics gathering for metadata commands such as SHOW TABLE STATUS for tables that use transient statistics (off by default)', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_PRINT_ALL_DEADLOCKS', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Print all deadlocks to MariaDB error log (off by default)', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('TCP_KEEPALIVE_PROBES', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'INT', 'The number of unacknowledged probes to send before considering the connection dead and notifying the application layer.If set to 0, system dependent default is used.', '0', '2147483', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_STATS_TRADITIONAL', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'Enable traditional statistic calculation based on number of configured pages (default true)', null, null, null, 'OFF,ON', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SECURE_FILE_PRIV', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Limit LOAD DATA, SELECT ... OUTFILE, and LOAD_FILE() to files within specified directory', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LOG_SLOW_DISABLED_STATEMENTS', 'sp', 'sp', 'COMPILE-TIME', 'sp', 'SESSION', 'SET', 'Don''t log certain types of statements to slow log', null, null, null, 'admin,call,slave,sp', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_NODE_INCOMING_ADDRESS', null, 'AUTO', 'COMPILE-TIME', 'AUTO', 'GLOBAL', 'VARCHAR', 'Client connection address', null, null, null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_MAX_DIRTY_PAGES_PCT', null, '75.000000', 'COMPILE-TIME', '75.000000', 'GLOBAL', 'DOUBLE', 'Percentage of dirty pages allowed in bufferpool.', '0', '99.999', null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_CERTIFY_NONPK', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'Certify tables with no primary key', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MAX_DELAYED_THREADS', '20', '20', 'COMPILE-TIME', '20', 'SESSION', 'BIGINT UNSIGNED', 'Don''t start more than this number of threads to handle INSERT DELAYED statements. If set to zero INSERT DELAYED will be not used', '0', '16384', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SKIP_EXTERNAL_LOCKING', null, 'ON', 'COMPILE-TIME', null, 'GLOBAL', 'BOOLEAN', 'Don''t use system (external) locking', null, null, null, 'OFF,ON', 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('KEY_BUFFER_SIZE', null, '134217728', 'COMPILE-TIME', '134217728', 'GLOBAL', 'BIGINT UNSIGNED', 'The size of the buffer used for index blocks for MyISAM tables. Increase this to get better index handling (for all reads and multiple writes) to as much as you can afford', '0', '18446744073709551615', '4096', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MAX_BINLOG_SIZE', null, '1073741824', 'COMPILE-TIME', '1073741824', 'GLOBAL', 'BIGINT UNSIGNED', 'Binary log will be rotated automatically when the size exceeds this value.', '4096', '1073741824', '4096', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LOG_DISABLED_STATEMENTS', 'sp', 'sp', 'COMPILE-TIME', 'sp', 'SESSION', 'SET', 'Don''t log certain types of statements to general log', null, null, null, 'slave,sp', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SYSTEM_VERSIONING_ALTER_HISTORY', 'ERROR', 'ERROR', 'COMPILE-TIME', 'ERROR', 'SESSION', 'ENUM', 'Versioning ALTER TABLE mode. ERROR: Fail ALTER with error; KEEP: Keep historical system rows and subject them to ALTER', null, null, null, 'ERROR,KEEP', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PSEUDO_SLAVE_MODE', 'OFF', null, 'COMPILE-TIME', 'OFF', 'SESSION ONLY', 'BOOLEAN', 'SET pseudo_slave_mode= 0,1 are commands that mysqlbinlog adds to beginning and end of binary log dumps. While zero value indeed disables, the actual enabling of the slave applier execution mode is done implicitly when a Format_description_event is sent through the session.', null, null, null, 'OFF,ON', 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_MAX_FILE_INSTANCES', null, '-1', 'COMPILE-TIME', '-1', 'GLOBAL', 'BIGINT', 'Maximum number of instrumented files. Use 0 to disable, -1 for automated sizing.', '-1', '1048576', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SYNC_RELAY_LOG', null, '10000', 'COMPILE-TIME', '10000', 'GLOBAL', 'INT UNSIGNED', 'Synchronously flush relay log to disk after every #th event. Use 0 to disable synchronous flushing', '0', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('CORE_FILE', null, 'OFF', 'COMPILE-TIME', null, 'GLOBAL', 'BOOLEAN', 'write a core-file on crashes', null, null, null, 'OFF,ON', 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_DEFAULT_ENCRYPTION_KEY_ID', '1', '1', 'COMPILE-TIME', '1', 'SESSION', 'INT UNSIGNED', 'Default encryption key id used for table encryption.', '1', '4294967295', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('DISCONNECT_ON_EXPIRED_PASSWORD', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'This variable controls how the server handles clients that are not aware of the sandbox mode. If enabled, the server disconnects the client, otherwise the server puts the client in a sandbox mode.', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_MAX_UNDO_LOG_SIZE', null, '10485760', 'COMPILE-TIME', '10485760', 'GLOBAL', 'BIGINT UNSIGNED', 'Desired maximum UNDO tablespace size in bytes', '10485760', '281474976710656', '0', null, 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LOG_BIN_COMPRESS_MIN_LEN', null, '256', 'COMPILE-TIME', '256', 'GLOBAL', 'INT UNSIGNED', 'Minimum length of sql statement(in statement mode) or record(in row mode)that can be compressed.', '10', '1024', '1', null, 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MAX_ROWID_FILTER_SIZE', '131072', '131072', 'COMPILE-TIME', '131072', 'SESSION', 'BIGINT UNSIGNED', 'The maximum size of the container of a rowid filter', '1024', '18446744073709551615', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('AUTO_INCREMENT_OFFSET', '1', '1', 'COMPILE-TIME', '1', 'SESSION', 'BIGINT UNSIGNED', 'Offset added to Auto-increment columns. Used when auto-increment-increment != 1', '1', '65535', '1', null, 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SLAVE_NET_TIMEOUT', null, '60', 'COMPILE-TIME', '60', 'GLOBAL', 'INT UNSIGNED', 'Number of seconds to wait for more data from any master/slave connection before aborting the read', '1', '31536000', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('QUERY_CACHE_SIZE', null, '1048576', 'COMPILE-TIME', '1048576', 'GLOBAL', 'BIGINT UNSIGNED', 'The memory allocated to store results from old queries', '0', '18446744073709551615', '1024', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_STATS_SAMPLE_PAGES', null, '8', 'COMPILE-TIME', '8', 'GLOBAL', 'BIGINT UNSIGNED', 'Deprecated, use innodb_stats_transient_sample_pages instead', '1', '18446744073709551615', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('OPTIMIZER_TRACE_MAX_MEM_SIZE', '1048576', '1048576', 'COMPILE-TIME', '1048576', 'SESSION', 'BIGINT UNSIGNED', 'Maximum allowed size of an optimizer trace', '0', '18446744073709551615', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('THREAD_POOL_PRIORITY', 'auto', 'auto', 'COMPILE-TIME', 'auto', 'SESSION', 'ENUM', 'Threadpool priority. High priority connections usually start executing earlier than low priority.If priority set to ''auto'', the the actual priority(low or high) is determined based on whether or not connection is inside transaction.', null, null, null, 'high,low,auto', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SKIP_PARALLEL_REPLICATION', 'OFF', null, 'COMPILE-TIME', 'OFF', 'SESSION ONLY', 'BOOLEAN', 'If set when a transaction is written to the binlog, parallel apply of that transaction will be avoided on a slave where slave_parallel_mode is not "aggressive". Can be used to avoid unnecessary rollback and retry for transactions that are likely to cause a conflict if replicated in parallel.', null, null, null, 'OFF,ON', 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_TRX_FRAGMENT_SIZE', '0', '0', 'COMPILE-TIME', '0', 'SESSION', 'BIGINT UNSIGNED', 'Size of transaction fragments for streaming replication (measured in units of ''wsrep_trx_fragment_unit'')', '0', '2147483647', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('METADATA_LOCKS_HASH_INSTANCES', null, '8', 'COMPILE-TIME', '8', 'GLOBAL', 'BIGINT UNSIGNED', 'Unused', '1', '1024', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_ADAPTIVE_FLUSHING_LWM', null, '10.000000', 'COMPILE-TIME', '10.000000', 'GLOBAL', 'DOUBLE', 'Percentage of log capacity below which no adaptive flushing happens.', '0', '70', null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('BINLOG_COMMIT_WAIT_USEC', null, '100000', 'COMPILE-TIME', '100000', 'GLOBAL', 'BIGINT UNSIGNED', 'Maximum time, in microseconds, to wait for more commits to queue up for binlog group commit. Only takes effect if the value of binlog_commit_wait_count is non-zero.', '0', '18446744073709551615', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_DEFRAGMENT_FREQUENCY', null, '40', 'COMPILE-TIME', '40', 'GLOBAL', 'INT UNSIGNED', 'Do not defragment a single index more than this number of time per second.This controls the number of time defragmentation thread can request X_LOCK on an index. Defragmentation thread will check whether 1/defragment_frequency (s) has passed since it worked on this index last time, and put the index back to the queue if not enough time has passed. The actual frequency can only be lower than this given number.', '1', '1000', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('READ_BUFFER_SIZE', '131072', '131072', 'COMPILE-TIME', '131072', 'SESSION', 'BIGINT UNSIGNED', 'Each thread that does a sequential scan allocates a buffer of this size for each table it scans. If you do many sequential scans, you may want to increase this value', '8192', '2147483647', '4096', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SQL_WARNINGS', 'OFF', 'OFF', 'COMPILE-TIME', 'OFF', 'SESSION', 'BOOLEAN', 'If set to 1, single-row INSERTs will produce a string containing warning information if a warning occurs.', null, null, null, 'OFF,ON', 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_BUFFER_POOL_LOAD_ABORT', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Abort a currently running load of the buffer pool', null, null, null, 'OFF,ON', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('STRICT_PASSWORD_VALIDATION', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'When password validation plugins are enabled, reject passwords that cannot be validated (passwords specified as a hash)', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PID_FILE', null, '/var/lib/mysql/windoge-pc.pid', 'AUTO', '', 'GLOBAL', 'VARCHAR', 'Pid file used by safe_mysqld', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_SYNC_ARRAY_SIZE', null, '1', 'COMPILE-TIME', '1', 'GLOBAL', 'BIGINT UNSIGNED', 'Size of the mutex/lock wait array.', '1', '1024', '0', null, 'YES', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('TLS_VERSION', null, 'TLSv1.1,TLSv1.2,TLSv1.3', 'COMPILE-TIME', 'TLSv1.1,TLSv1.2,TLSv1.3', 'GLOBAL', 'SET', 'TLS protocol version for secure connections.', null, null, null, 'TLSv1.0,TLSv1.1,TLSv1.2,TLSv1.3', 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_GTID_DOMAIN_ID', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'INT UNSIGNED', 'When wsrep_gtid_mode is set, this value is used as gtid_domain_id for galera transactions and also copied to the joiner nodes during state transfer. It is ignored, otherwise.', '0', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MIN_EXAMINED_ROW_LIMIT', '0', '0', 'COMPILE-TIME', '0', 'SESSION', 'BIGINT UNSIGNED', 'Don''t write queries to slow log that examine fewer rows than that', '0', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('THREAD_POOL_STALL_LIMIT', null, '500', 'COMPILE-TIME', '500', 'GLOBAL', 'INT UNSIGNED', 'Maximum query execution time in milliseconds,before an executing non-yielding thread is considered stalled.If a worker thread is stalled, additional worker thread may be created to handle remaining clients.', '10', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('TMPDIR', null, '/tmp', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Path for temporary files. Several paths may be specified, separated by a colon (:), in this case they are used in a round-robin fashion', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_MAX_SOCKET_INSTANCES', null, '-1', 'COMPILE-TIME', '-1', 'GLOBAL', 'BIGINT', 'Maximum number of opened instrumented sockets. Use 0 to disable, -1 for automated sizing.', '-1', '1048576', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('FLUSH_TIME', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'BIGINT UNSIGNED', 'A dedicated thread is created to flush all tables at the given interval', '0', '31536000', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('TX_READ_ONLY', 'OFF', 'OFF', 'COMPILE-TIME', 'OFF', 'SESSION', 'BOOLEAN', 'Default transaction access mode. If set to OFF, the default, access is read/write. If set to ON, access is read-only. The SET TRANSACTION statement can also change the value of this variable. See SET TRANSACTION and START TRANSACTION.', null, null, null, 'OFF,ON', 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('COLUMN_COMPRESSION_ZLIB_STRATEGY', 'DEFAULT_STRATEGY', 'DEFAULT_STRATEGY', 'COMPILE-TIME', 'DEFAULT_STRATEGY', 'SESSION', 'ENUM', 'The strategy parameter is used to tune the compression algorithm. Use the value DEFAULT_STRATEGY for normal data, FILTERED for data produced by a filter (or predictor), HUFFMAN_ONLY to force Huffman encoding only (no string match), or RLE to limit match distances to one (run-length encoding). Filtered data consists mostly of small values with a somewhat random distribution. In this case, the compression algorithm is tuned to compress them better. The effect of FILTERED is to force more Huffman coding and less string matching; it is somewhat intermediate between DEFAULT_STRATEGY and HUFFMAN_ONLY. RLE is designed to be almost as fast as HUFFMAN_ONLY, but give better compression for PNG image data. The strategy parameter only affects the compression ratio but not the correctness of the compressed output even if it is not set appropriately. FIXED prevents the use of dynamic Huffman codes, allowing for a simpler decoder for special applications.', null, null, null, 'DEFAULT_STRATEGY,FILTERED,HUFFMAN_ONLY,RLE,FIXED', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_RANDOM_READ_AHEAD', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Whether to use read ahead for random access within an extent.', null, null, null, 'OFF,ON', 'NO', 'NONE');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('THREAD_POOL_MAX_THREADS', null, '65536', 'COMPILE-TIME', '65536', 'GLOBAL', 'INT UNSIGNED', 'Maximum allowed number of worker threads in the thread pool', '1', '65536', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_UNDO_LOGS', null, '128', 'COMPILE-TIME', '128', 'GLOBAL', 'BIGINT UNSIGNED', 'Number of undo logs to use.', '1', '128', '0', null, 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('HAVE_SSL', null, 'DISABLED', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'If the server supports secure connections, will be set to YES, otherwise will be set to NO. If set to DISABLED, the server was compiled with TLS support, but was not started with TLS support (see the mysqld options). See also have_openssl.', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PORT', null, '3306', 'AUTO', '0', 'GLOBAL', 'INT UNSIGNED', 'Port number to use for connection or 0 to default to, my.cnf, $MYSQL_TCP_PORT, /etc/services, built-in default (3306), whatever comes first', '0', '4294967295', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('OLD_ALTER_TABLE', 'DEFAULT', 'DEFAULT', 'COMPILE-TIME', 'DEFAULT', 'SESSION', 'ENUM', 'Alias for alter_algorithm. Deprecated. Use --alter-algorithm instead.', null, null, null, 'DEFAULT,COPY,INPLACE,NOCOPY,INSTANT', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('READ_BINLOG_SPEED_LIMIT', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'BIGINT UNSIGNED', 'Maximum speed(KB/s) to read binlog from master (0 = no limit)', '0', '18446744073709551615', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SSL_CAPATH', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'CA directory (check OpenSSL docs, implies --ssl)', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LOG_BIN_TRUST_FUNCTION_CREATORS', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'If set to FALSE (the default), then when --log-bin is used, creation of a stored function (or trigger) is allowed only to users having the SUPER privilege and only if this stored function (trigger) may not break binary logging. Note that if ALL connections to this server ALWAYS use row-based binary logging, the security issues do not exist and the binary logging cannot break, so you can safely set this to TRUE', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('VERSION_COMMENT', null, 'Source distribution', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'Value of the COMPILATION_COMMENT option specified by CMake when building MariaDB, for example mariadb.org binary distribution.', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_MONITOR_DISABLE', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Turn off a monitor counter', null, null, null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MASTER_VERIFY_CHECKSUM', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Force checksum verification of logged events in the binary log before sending them to slaves or printing them in the output of SHOW BINLOG EVENTS', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MYISAM_BLOCK_SIZE', null, '1024', 'COMPILE-TIME', '1024', 'GLOBAL', 'BIGINT UNSIGNED', 'Block size to be used for MyISAM index pages', '1024', '16384', '1024', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('RPL_SEMI_SYNC_MASTER_ENABLED', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Enable semi-synchronous replication master (disabled by default).', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MAX_BINLOG_STMT_CACHE_SIZE', null, '18446744073709547520', 'COMPILE-TIME', '18446744073709547520', 'GLOBAL', 'BIGINT UNSIGNED', 'Sets the total size of the statement cache', '4096', '18446744073709551615', '4096', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('OPTIMIZER_SELECTIVITY_SAMPLING_LIMIT', '100', '100', 'COMPILE-TIME', '100', 'SESSION', 'BIGINT UNSIGNED', 'Controls number of record samples to check condition selectivity', '10', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ENCRYPT_TMP_FILES', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Encrypt temporary files (created for filesort, binary log cache, etc)', null, null, null, 'OFF,ON', 'YES', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('KEY_CACHE_AGE_THRESHOLD', null, '300', 'COMPILE-TIME', '300', 'GLOBAL', 'BIGINT UNSIGNED', 'This characterizes the number of hits a hot block has to be untouched until it is considered aged enough to be downgraded to a warm block. This specifies the percentage ratio of that number of hits to the total number of blocks in key cache', '100', '4294967295', '100', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_SPIN_WAIT_DELAY', null, '4', 'COMPILE-TIME', '4', 'GLOBAL', 'INT UNSIGNED', 'Maximum delay between polling for a spin lock (4 by default)', '0', '6000', '0', null, 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('BINLOG_COMMIT_WAIT_COUNT', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'BIGINT UNSIGNED', 'If non-zero, binlog write will wait at most binlog_commit_wait_usec microseconds for at least this many commits to queue up for group commit to the binlog. This can reduce I/O on the binlog and provide increased opportunity for parallel apply on the slave, but too high a value will decrease commit throughput.', '0', '18446744073709551615', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_STATS_INCLUDE_DELETE_MARKED', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Include delete marked records when calculating persistent statistics', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('DEFAULT_MASTER_CONNECTION', '', null, 'COMPILE-TIME', '', 'SESSION ONLY', 'VARCHAR', 'Master connection to use for all slave variables and slave commands', null, null, null, null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_DEFRAGMENT_STATS_ACCURACY', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'INT UNSIGNED', 'How many defragment stats changes there are before the stats are written to persistent storage. Set to 0 meaning disable defragment stats tracking.', '0', '4294967295', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('VERSION_SSL_LIBRARY', null, 'OpenSSL 1.1.1c  28 May 2019', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'Version of the used SSL library', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_LOCK_WAIT_TIMEOUT', '50', '50', 'COMPILE-TIME', '50', 'SESSION', 'BIGINT UNSIGNED', 'Timeout in seconds an InnoDB transaction may wait for a lock before being rolled back. Values above 100000000 disable the timeout.', '0', '1073741824', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('OPTIMIZER_PRUNE_LEVEL', '1', '1', 'COMPILE-TIME', '1', 'SESSION', 'BIGINT UNSIGNED', 'Controls the heuristic(s) applied during query optimization to prune less-promising partial plans from the optimizer search space. Meaning: 0 - do not apply any heuristic, thus perform exhaustive search; 1 - prune plans based on number of retrieved rows', '0', '1', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_OLD_BLOCKS_TIME', null, '1000', 'COMPILE-TIME', '1000', 'GLOBAL', 'INT UNSIGNED', 'Move blocks to the ''new'' end of the buffer pool if the first access was at least this many milliseconds ago. The timeout is disabled if 0.', '0', '4294967295', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('VERSION_MALLOC_LIBRARY', null, 'jemalloc 5.2.0-0-gb0b3e49a54ec29e32636f4577d9d5a896d67fd20', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'Version of the used malloc library', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('TIMED_MUTEXES', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Specify whether to time mutexes. Deprecated, has no effect.', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('RPL_SEMI_SYNC_SLAVE_TRACE_LEVEL', null, '32', 'COMPILE-TIME', '32', 'GLOBAL', 'BIGINT UNSIGNED', 'The tracing level for semi-sync replication.', '0', '18446744073709551615', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('EXTERNAL_USER', '', null, 'COMPILE-TIME', null, 'SESSION ONLY', 'VARCHAR', 'The external user account used when logging in', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('THREAD_POOL_SIZE', null, '8', 'AUTO', '8', 'GLOBAL', 'INT UNSIGNED', 'Number of thread groups in the pool. This parameter is roughly equivalent to maximum number of concurrently executing threads (threads in a waiting state do not count as executing).', '1', '100000', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_COMPRESSION_FAILURE_THRESHOLD_PCT', null, '5', 'COMPILE-TIME', '5', 'GLOBAL', 'BIGINT UNSIGNED', 'If the compression failure rate of a table is greater than this number more padding is added to the pages to reduce the failures. A value of zero implies no padding', '0', '100', '0', null, 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('OLD_PASSWORDS', 'OFF', 'OFF', 'COMPILE-TIME', 'OFF', 'SESSION', 'BOOLEAN', 'Use old password encryption method (needed for 4.0 and older clients)', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LOCKED_IN_MEMORY', null, 'OFF', 'COMPILE-TIME', null, 'GLOBAL', 'BOOLEAN', 'Whether mysqld was locked in memory with --memlock', null, null, null, 'OFF,ON', 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SKIP_NETWORKING', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Don''t allow connection with TCP/IP', null, null, null, 'OFF,ON', 'YES', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ERROR_COUNT', '0', null, 'COMPILE-TIME', null, 'SESSION ONLY', 'BIGINT UNSIGNED', 'The number of errors that resulted from the last statement that generated messages', '0', '18446744073709551615', '1', null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_SLAVE_UK_CHECKS', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Should slave thread do secondary index uniqueness checks', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_DISALLOW_WRITES', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Tell InnoDB to stop any writes to disk', null, null, null, 'OFF,ON', 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INIT_CONNECT', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Command(s) that are executed for each new connection (unless the user has SUPER privilege)', null, null, null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_PREFIX_INDEX_CLUSTER_OPTIMIZATION', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Enable prefix optimization to sometimes avoid cluster index lookups.', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('TABLE_DEFINITION_CACHE', null, '400', 'AUTO', '400', 'GLOBAL', 'BIGINT UNSIGNED', 'The number of cached table definitions', '400', '2097152', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('NET_RETRY_COUNT', '10', '10', 'COMPILE-TIME', '10', 'SESSION', 'BIGINT UNSIGNED', 'If a read on a communication port is interrupted, retry this many times before giving up', '1', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('DEADLOCK_TIMEOUT_LONG', '50000000', '50000000', 'COMPILE-TIME', '50000000', 'SESSION', 'BIGINT UNSIGNED', 'Long timeout for the two-step deadlock detection (in microseconds)', '0', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SLAVE_SKIP_ERRORS', null, 'OFF', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Tells the slave thread to continue replication when a query event returns an error from the provided list', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ENCRYPT_TMP_DISK_TABLES', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Encrypt temporary on-disk tables (created as part of query execution)', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_BUFFER_POOL_DUMP_PCT', null, '25', 'COMPILE-TIME', '25', 'GLOBAL', 'BIGINT UNSIGNED', 'Dump only the hottest N% of each buffer pool, defaults to 25', '1', '100', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SLAVE_PARALLEL_WORKERS', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'BIGINT UNSIGNED', 'Alias for slave_parallel_threads', '0', '16383', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_ENCRYPT_TABLES', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'ENUM', 'Enable encryption for tables. Don''t forget to enable --innodb-encrypt-log too', null, null, null, 'OFF,ON,FORCE', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_MAX_SOCKET_CLASSES', null, '10', 'COMPILE-TIME', '10', 'GLOBAL', 'BIGINT UNSIGNED', 'Maximum number of socket instruments.', '0', '256', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('COLLATION_DATABASE', 'utf8_general_ci', 'utf8mb4_unicode_ci', 'COMPILE-TIME', 'utf8mb4_unicode_ci', 'SESSION', 'ENUM', 'The collation of the database character set', null, null, null, null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('METADATA_LOCKS_CACHE_SIZE', null, '1024', 'COMPILE-TIME', '1024', 'GLOBAL', 'BIGINT UNSIGNED', 'Unused', '1', '1048576', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_MONITOR_ENABLE', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Turn on a monitor counter', null, null, null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LAST_INSERT_ID', '0', null, 'COMPILE-TIME', '0', 'SESSION ONLY', 'BIGINT UNSIGNED', 'The value to be returned from LAST_INSERT_ID()', '0', '18446744073709551615', '1', null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_LOG_BUFFER_SIZE', null, '16777216', 'COMPILE-TIME', '16777216', 'GLOBAL', 'BIGINT UNSIGNED', 'The size of the buffer which InnoDB uses to write log to the log files on disk.', '262144', '9223372036854775807', '1024', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('HOSTNAME', null, 'windoge-pc', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'Server host name', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('HOST_CACHE_SIZE', null, '279', 'AUTO', '128', 'GLOBAL', 'BIGINT UNSIGNED', 'How many host names should be cached to avoid resolving.', '0', '65536', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('DEFAULT_PASSWORD_LIFETIME', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'INT UNSIGNED', 'This defines the global password expiration policy. 0 means automatic password expiration is disabled. If the value is a positive integer N, the passwords must be changed every N days. This behavior can be overridden using the password expiration options in ALTER USER.', '0', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_MAX_PURGE_LAG', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'BIGINT UNSIGNED', 'Desired maximum length of the purge queue (0 = no limit)', '0', '18446744073709551615', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MULTI_RANGE_COUNT', '256', '256', 'COMPILE-TIME', '256', 'SESSION', 'BIGINT UNSIGNED', 'Ignored. Use mrr_buffer_size instead', '1', '18446744073709551615', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MYISAM_MAX_SORT_FILE_SIZE', null, '9223372036853727232', 'COMPILE-TIME', '9223372036853727232', 'GLOBAL', 'BIGINT UNSIGNED', 'Don''t use the fast sort index method to created index if the temporary file would get bigger than this', '0', '9223372036854775807', '1048576', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('THREAD_CACHE_SIZE', null, '151', 'AUTO', '256', 'GLOBAL', 'BIGINT UNSIGNED', 'How many threads we should keep in a cache for reuse. These are freed after 5 minutes of idle time', '0', '16384', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_LRU_SCAN_DEPTH', null, '1024', 'COMPILE-TIME', '1024', 'GLOBAL', 'BIGINT UNSIGNED', 'How deep to scan LRU to keep it clean', '100', '18446744073709551615', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('DEFAULT_TMP_STORAGE_ENGINE', '', '', 'COMPILE-TIME', null, 'SESSION', 'VARCHAR', 'The default storage engine for user-created temporary tables', null, null, null, null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_LOG_CONFLICTS', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'To log multi-master conflicts', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SLAVE_TYPE_CONVERSIONS', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'SET', 'Set of slave type conversions that are enabled. If the variable is empty, no conversions are allowed and it is expected that the types match exactly', null, null, null, 'ALL_LOSSY,ALL_NON_LOSSY', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('OLD_MODE', '', '', 'COMPILE-TIME', '', 'SESSION', 'SET', 'Used to emulate old behavior from earlier MariaDB or MySQL versions', null, null, null, 'NO_DUP_KEY_WARNINGS_WITH_IGNORE,NO_PROGRESS_INFO,ZERO_DATE_TIME_CAST', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('QUERY_ALLOC_BLOCK_SIZE', '16384', '16384', 'COMPILE-TIME', '16384', 'SESSION', 'BIGINT UNSIGNED', 'Allocation block size for query parsing and execution', '1024', '4294967295', '1024', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('DEFAULT_REGEX_FLAGS', '', '', 'COMPILE-TIME', '', 'SESSION', 'SET', 'Default flags for the regex library', null, null, null, 'DOTALL,DUPNAMES,EXTENDED,EXTRA,MULTILINE,UNGREEDY', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('BINLOG_FORMAT', 'MIXED', 'MIXED', 'COMPILE-TIME', 'MIXED', 'SESSION', 'ENUM', 'What form of binary logging the master will use: either ROW for row-based binary logging, STATEMENT for statement-based binary logging, or MIXED. MIXED is statement-based binary logging except for those statements where only row-based is correct: those which involve user-defined functions (i.e. UDFs) or the UUID() function; for those, row-based binary logging is automatically used.', null, null, null, 'MIXED,STATEMENT,ROW', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('HISTOGRAM_TYPE', 'DOUBLE_PREC_HB', 'DOUBLE_PREC_HB', 'COMPILE-TIME', 'DOUBLE_PREC_HB', 'SESSION', 'ENUM', 'Specifies type of the histograms created by ANALYZE. Possible values are: SINGLE_PREC_HB - single precision height-balanced, DOUBLE_PREC_HB - double precision height-balanced.', null, null, null, 'SINGLE_PREC_HB,DOUBLE_PREC_HB', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ANALYZE_SAMPLE_PERCENTAGE', '100.000000', '100.000000', 'COMPILE-TIME', '100.000000', 'SESSION', 'DOUBLE', 'Percentage of rows from the table ANALYZE TABLE will sample to collect table statistics. Set to 0 to let MariaDB decide what percentage of rows to sample.', '0', '100', null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('HAVE_COMPRESS', null, 'YES', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'If the zlib compression library is accessible to the server, this will be set to YES, otherwise it will be NO. The COMPRESS() and UNCOMPRESS() functions will only be available if set to YES.', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('KEEP_FILES_ON_CREATE', 'OFF', 'OFF', 'COMPILE-TIME', 'OFF', 'SESSION', 'BOOLEAN', 'Don''t overwrite stale .MYD and .MYI even if no directory is specified', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_USE_ATOMIC_WRITES', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'Enable atomic writes, instead of using the doublewrite buffer, for files on devices that supports atomic writes. To use this option one must use innodb_file_per_table=1, innodb_flush_method=O_DIRECT. This option only works on Linux with either FusionIO cards using the directFS filesystem or with Shannon cards using any file system.', null, null, null, 'OFF,ON', 'YES', 'NONE');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('FT_BOOLEAN_SYNTAX', null, '+ -><()~*:""&|', 'COMPILE-TIME', '+ -><()~*:""&|', 'GLOBAL', 'VARCHAR', 'List of operators for MATCH ... AGAINST ( ... IN BOOLEAN MODE)', null, null, null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PROXY_PROTOCOL_NETWORKS', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Enable proxy protocol for these source networks. The syntax is a comma separated list of IPv4 and IPv6 networks. If the network doesn''t contain mask, it is considered to be a single host. "*" represents all networks and must the only directive on the line. String "localhost" represents non-TCP local connections (Unix domain socket, Windows named pipe or shared memory).', null, null, null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SLAVE_DDL_EXEC_MODE', null, 'IDEMPOTENT', 'COMPILE-TIME', 'IDEMPOTENT', 'GLOBAL', 'ENUM', 'How replication events should be executed. Legal values are STRICT and IDEMPOTENT (default). In IDEMPOTENT mode, replication will not stop for DDL operations that are idempotent. This means that CREATE TABLE is treated as CREATE TABLE OR REPLACE and DROP TABLE is treated as DROP TABLE IF EXISTS.', null, null, null, 'STRICT,IDEMPOTENT', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_DOUBLEWRITE', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'Enable InnoDB doublewrite buffer (enabled by default). Disable with --skip-innodb-doublewrite.', null, null, null, 'OFF,ON', 'YES', 'NONE');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('CHARACTER_SET_DATABASE', 'utf8', 'utf8mb4', 'COMPILE-TIME', 'utf8mb4', 'SESSION', 'ENUM', 'The character set used by the default database', null, null, null, null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_STATS_PERSISTENT', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'InnoDB persistent statistics enabled for all tables unless overridden at table level', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('DATE_FORMAT', null, '%Y-%m-%d', 'COMPILE-TIME', '%Y-%m-%d', 'GLOBAL', 'VARCHAR', 'The DATE format (ignored)', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('DEFAULT_WEEK_FORMAT', '0', '0', 'COMPILE-TIME', '0', 'SESSION', 'BIGINT UNSIGNED', 'The default week format used by WEEK() functions', '0', '7', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('QUERY_CACHE_WLOCK_INVALIDATE', 'OFF', 'OFF', 'COMPILE-TIME', 'OFF', 'SESSION', 'BOOLEAN', 'Invalidate queries in query cache on LOCK for write', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_CHANGE_BUFFER_MAX_SIZE', null, '25', 'COMPILE-TIME', '25', 'GLOBAL', 'INT UNSIGNED', 'Maximum on-disk size of change buffer in terms of percentage of the buffer pool.', '0', '50', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('TIMESTAMP', '1565600005.565010', null, 'COMPILE-TIME', '0.000000', 'SESSION ONLY', 'DOUBLE', 'Set the time for this client', '0', '2147483647', null, null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_DEFAULT_ROW_FORMAT', null, 'dynamic', 'COMPILE-TIME', 'dynamic', 'GLOBAL', 'ENUM', 'The default ROW FORMAT for all innodb tables created without explicit ROW_FORMAT. Possible values are REDUNDANT, COMPACT, and DYNAMIC. The ROW_FORMAT value COMPRESSED is not allowed', null, null, null, 'redundant,compact,dynamic', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SLAVE_COMPRESSED_PROTOCOL', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Use compression on master/slave protocol', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_USE_NATIVE_AIO', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'Use native AIO if supported on this platform.', null, null, null, 'OFF,ON', 'YES', 'NONE');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PRELOAD_BUFFER_SIZE', '32768', '32768', 'COMPILE-TIME', '32768', 'SESSION', 'BIGINT UNSIGNED', 'The size of the buffer that is allocated when preloading indexes', '1024', '1073741824', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SOCKET', null, '/run/mysqld/mysqld.sock', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Socket file to use for connection', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('RELAY_LOG_SPACE_LIMIT', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'BIGINT UNSIGNED', 'Maximum space to use for all relay logs', '0', '18446744073709551615', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_UNDO_TABLESPACES', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'BIGINT UNSIGNED', 'Number of undo tablespaces to use.', '0', '127', '0', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('REPORT_USER', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'The account user name of the slave to be reported to the master during slave registration', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_BUF_DUMP_STATUS_FREQUENCY', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'BIGINT UNSIGNED', 'A number between [0, 100] that tells how oftern buffer pool dump status in percentages should be printed. E.g. 10 means that buffer pool dump status is printed when every 10% of number of buffer pool pages are dumped. Default is 0 (only start and end status is printed).', '0', '100', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_CAUSAL_READS', 'OFF', 'OFF', 'COMPILE-TIME', 'OFF', 'SESSION', 'BOOLEAN', 'Setting this variable is equivalent to setting wsrep_sync_wait READ flag', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('DEADLOCK_SEARCH_DEPTH_SHORT', '4', '4', 'COMPILE-TIME', '4', 'SESSION', 'BIGINT UNSIGNED', 'Short search depth for the two-step deadlock detection', '0', '32', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('NET_BUFFER_LENGTH', '16384', '16384', 'COMPILE-TIME', '16384', 'SESSION', 'BIGINT UNSIGNED', 'Buffer length for TCP/IP and socket communication', '1024', '1048576', '1024', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_FT_MIN_TOKEN_SIZE', null, '3', 'COMPILE-TIME', '3', 'GLOBAL', 'BIGINT UNSIGNED', 'InnoDB Fulltext search minimum token size in characters', '0', '16', '0', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LOG_ERROR', null, '', 'COMPILE-TIME', '0', 'GLOBAL', 'VARCHAR', 'Log errors to file (instead of stdout).  If file name is not specified then ''datadir''/''log-basename''.err or the ''pid-file'' path with extension .err is used', null, null, null, null, 'YES', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_FT_USER_STOPWORD_TABLE', '', '', 'COMPILE-TIME', '', 'SESSION', 'VARCHAR', 'User supplied stopword table name, effective in the session level.', null, null, null, null, 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('REPLICATE_DO_TABLE', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Tells the slave to restrict replication to tables in the comma-separated list.', null, null, null, null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SERVER_ID', '1', '1', 'COMPILE-TIME', '1', 'SESSION', 'BIGINT UNSIGNED', 'Uniquely identifies the server instance in the community of replication partners', '1', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('OPTIMIZER_SWITCH', 'index_merge=on,index_merge_union=on,index_merge_sort_union=on,index_merge_intersection=on,index_merge_sort_intersection=off,engine_condition_pushdown=off,index_condition_pushdown=on,derived_merge=on,derived_with_keys=on,firstmatch=on,loosescan=on,materialization=on,in_to_exists=on,semijoin=on,partial_match_rowid_merge=on,partial_match_table_scan=on,subquery_cache=on,mrr=off,mrr_cost_based=off,mrr_sort_keys=off,outer_join_with_cache=on,semijoin_with_cache=on,join_cache_incremental=on,join_cache_hashed=on,join_cache_bka=on,optimize_join_buffer_size=on,table_elimination=on,extended_keys=on,exists_to_in=on,orderby_uses_equalities=on,condition_pushdown_for_derived=on,split_materialized=on,condition_pushdown_for_subquery=on,rowid_filter=on,condition_pushdown_from_having=on', 'index_merge=on,index_merge_union=on,index_merge_sort_union=on,index_merge_intersection=on,index_merge_sort_intersection=off,engine_condition_pushdown=off,index_condition_pushdown=on,derived_merge=on,derived_with_keys=on,firstmatch=on,loosescan=on,materialization=on,in_to_exists=on,semijoin=on,partial_match_rowid_merge=on,partial_match_table_scan=on,subquery_cache=on,mrr=off,mrr_cost_based=off,mrr_sort_keys=off,outer_join_with_cache=on,semijoin_with_cache=on,join_cache_incremental=on,join_cache_hashed=on,join_cache_bka=on,optimize_join_buffer_size=on,table_elimination=on,extended_keys=on,exists_to_in=on,orderby_uses_equalities=on,condition_pushdown_for_derived=on,split_materialized=on,condition_pushdown_for_subquery=on,rowid_filter=on,condition_pushdown_from_having=on', 'COMPILE-TIME', 'index_merge=on,index_merge_union=on,index_merge_sort_union=on,index_merge_intersection=on,index_merge_sort_intersection=off,engine_condition_pushdown=off,index_condition_pushdown=on,derived_merge=on,derived_with_keys=on,firstmatch=on,loosescan=on,materialization=on,in_to_exists=on,semijoin=on,partial_match_rowid_merge=on,partial_match_table_scan=on,subquery_cache=on,mrr=off,mrr_cost_based=off,mrr_sort_keys=off,outer_join_with_cache=on,semijoin_with_cache=on,join_cache_incremental=on,join_cache_hashed=on,join_cache_bka=on,optimize_join_buffer_size=on,table_elimination=on,extended_keys=on,exists_to_in=on,orderby_uses_equalities=on,condition_pushdown_for_derived=on,split_materialized=on,condition_pushdown_for_subquery=on,rowid_filter=on,condition_pushdown_from_having=on', 'SESSION', 'FLAGSET', 'Fine-tune the optimizer behavior', null, null, null, 'index_merge,index_merge_union,index_merge_sort_union,index_merge_intersection,index_merge_sort_intersection,engine_condition_pushdown,index_condition_pushdown,derived_merge,derived_with_keys,firstmatch,loosescan,materialization,in_to_exists,semijoin,partial_match_rowid_merge,partial_match_table_scan,subquery_cache,mrr,mrr_cost_based,mrr_sort_keys,outer_join_with_cache,semijoin_with_cache,join_cache_incremental,join_cache_hashed,join_cache_bka,optimize_join_buffer_size,table_elimination,extended_keys,exists_to_in,orderby_uses_equalities,condition_pushdown_for_derived,split_materialized,condition_pushdown_for_subquery,rowid_filter,condition_pushdown_from_having,default', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ARIA_MAX_SORT_FILE_SIZE', null, '9223372036853727232', 'COMPILE-TIME', '9223372036853727232', 'GLOBAL', 'BIGINT UNSIGNED', 'Don''t use the fast sort index method to created index if the temporary file would get bigger than this.', '0', '9223372036854775807', '1048576', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('TMP_DISK_TABLE_SIZE', '18446744073709551615', '18446744073709551615', 'COMPILE-TIME', '18446744073709551615', 'SESSION', 'BIGINT UNSIGNED', 'Max size for data for an internal temporary on-disk MyISAM or Aria table.', '1024', '18446744073709551615', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_TEMP_DATA_FILE_PATH', null, 'ibtmp1:12M:autoextend', 'COMPILE-TIME', 'ibtmp1:12M:autoextend', 'GLOBAL', 'VARCHAR', 'Path to files and their sizes making temp-tablespace.', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('OPEN_FILES_LIMIT', null, '4190', 'AUTO', '0', 'GLOBAL', 'BIGINT UNSIGNED', 'If this is not 0, then mysqld will use this value to reserve file descriptors to use with setrlimit(). If this value is 0 or autoset then mysqld will reserve max_connections*5 or max_connections + table_cache*2 (whichever is larger) number of file descriptors', '0', '4294967295', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_SCRUB_LOG_SPEED', null, '256', 'COMPILE-TIME', '256', 'GLOBAL', 'BIGINT UNSIGNED', 'Background redo log scrubbing speed in bytes/sec', '1', '50000', '0', null, 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('RPL_SEMI_SYNC_MASTER_TRACE_LEVEL', null, '32', 'COMPILE-TIME', '32', 'GLOBAL', 'BIGINT UNSIGNED', 'The tracing level for semi-sync replication.', '0', '18446744073709551615', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ARIA_SYNC_LOG_DIR', null, 'NEWFILE', 'COMPILE-TIME', 'NEWFILE', 'GLOBAL', 'ENUM', 'Controls syncing directory after log file growth and new file creation', null, null, null, 'NEVER,NEWFILE,ALWAYS', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('TIME_FORMAT', null, '%H:%i:%s', 'COMPILE-TIME', '%H:%i:%s', 'GLOBAL', 'VARCHAR', 'The TIME format (ignored)', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_FT_ENABLE_STOPWORD', 'ON', 'ON', 'COMPILE-TIME', 'ON', 'SESSION', 'BOOLEAN', 'Create FTS index with stopword.', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PROTOCOL_VERSION', null, '10', 'COMPILE-TIME', null, 'GLOBAL', 'INT UNSIGNED', 'The version of the client/server protocol used by the MariaDB server', '0', '4294967295', '1', null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_BACKGROUND_SCRUB_DATA_CHECK_INTERVAL', null, '3600', 'COMPILE-TIME', '3600', 'GLOBAL', 'INT UNSIGNED', 'check if spaces needs scrubbing every innodb_background_scrub_data_check_interval seconds', '1', '4294967295', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LOWER_CASE_FILE_SYSTEM', null, 'OFF', 'AUTO', null, 'GLOBAL', 'BOOLEAN', 'Case sensitivity of file names on the file system where the data directory is located', null, null, null, 'OFF,ON', 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ARIA_GROUP_COMMIT_INTERVAL', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'BIGINT UNSIGNED', 'Interval between commite in microseconds (1/1000000c). 0 stands for no waiting for other threads to come and do a commit in "hard" mode and no sync()/commit at all in "soft" mode.  Option has only an effect if aria_group_commit is used', '0', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('RELAY_LOG', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'The location and name to use for relay logs.', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PROFILING_HISTORY_SIZE', '15', '15', 'COMPILE-TIME', '15', 'SESSION', 'BIGINT UNSIGNED', 'Number of statements about which profiling information is maintained. If set to 0, no profiles are stored. See SHOW PROFILES.', '0', '100', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('GENERAL_LOG', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Log connections and queries to a table or log file. Defaults logging to a file ''hostname''.log or a table mysql.general_logif --log-output=TABLE is used.', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_CHANGE_BUFFERING', null, 'all', 'COMPILE-TIME', 'all', 'GLOBAL', 'ENUM', 'Buffer changes to secondary indexes.', null, null, null, 'none,inserts,deletes,changes,purges,all', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_DEBUG', null, 'NONE', 'COMPILE-TIME', 'NONE', 'GLOBAL', 'ENUM', 'WSREP debug level logging', null, null, null, 'NONE,SERVER,TRANSACTION,STREAMING,CLIENT', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_STATS_MODIFIED_COUNTER', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'BIGINT UNSIGNED', 'The number of rows modified before we calculate new statistics (default 0 = current limits)', '0', '18446744073709551615', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_DEFRAGMENT_FILL_FACTOR', null, '0.900000', 'COMPILE-TIME', '0.900000', 'GLOBAL', 'DOUBLE', 'A number between [0.7, 1] that tells defragmentation how full it should fill a page. Default is 0.9. Number below 0.7 won''t make much sense.This variable, together with innodb_defragment_fill_factor_n_recs, is introduced so defragmentation won''t pack the page too full and cause page split on the next insert on every page. The variable indicating more defragmentation gain is the one effective.', '0.7', '1', null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('BINLOG_OPTIMIZE_THREAD_SCHEDULING', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'Run fast part of group commit in a single thread, to optimize kernel thread scheduling. On by default. Disable to run each transaction in group commit in its own thread, which can be slower at very high concurrency. This option is mostly for testing one algorithm versus the other, and it should not normally be necessary to change it.', null, null, null, 'OFF,ON', 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SLAVE_TRANSACTION_RETRY_INTERVAL', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'BIGINT UNSIGNED', 'Interval of the slave SQL thread will retry a transaction in case it failed with a deadlock or elapsed lock wait timeout or listed in slave_transaction_retry_errors', '0', '3600', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ENCRYPT_BINLOG', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Encrypt binary logs (including relay logs)', null, null, null, 'OFF,ON', 'YES', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('HAVE_CRYPT', null, 'YES', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'If the crypt() system call is available this variable will be set to YES, otherwise it will be set to NO. If set to NO, the ENCRYPT() function cannot be used.', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SQL_SELECT_LIMIT', '18446744073709551615', '18446744073709551615', 'COMPILE-TIME', '18446744073709551615', 'SESSION', 'BIGINT UNSIGNED', 'The maximum number of rows to return from SELECT statements', '0', '18446744073709551615', '1', null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_SLAVE_THREADS', null, '1', 'COMPILE-TIME', '1', 'GLOBAL', 'BIGINT UNSIGNED', 'Number of slave appliers to launch', '1', '512', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ARIA_STATS_METHOD', 'nulls_unequal', 'nulls_unequal', 'COMPILE-TIME', 'nulls_unequal', 'SESSION', 'ENUM', 'Specifies how Aria index statistics collection code should treat NULLs', null, null, null, 'nulls_unequal,nulls_equal,nulls_ignored', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('HAVE_OPENSSL', null, 'YES', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'Comparing have_openssl with have_ssl will indicate whether YaSSL or openssl was used. If YaSSL, have_ssl will be YES, but have_openssl will be NO.', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_START_POSITION', null, '00000000-0000-0000-0000-000000000000:-1', 'COMPILE-TIME', '00000000-0000-0000-0000-000000000000:-1', 'GLOBAL', 'VARCHAR', 'global transaction position to start from ', null, null, null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_ON', 'OFF', 'OFF', 'COMPILE-TIME', 'OFF', 'SESSION', 'BOOLEAN', 'To enable wsrep replication ', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_COMPRESSION_ALGORITHM', null, 'zlib', 'COMPILE-TIME', 'zlib', 'GLOBAL', 'ENUM', 'Compression algorithm used on page compression. One of: none, zlib, lz4, lzo, lzma, or bzip2', null, null, null, 'none,zlib,lz4,lzo,lzma,bzip2,snappy', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WAIT_TIMEOUT', '28800', '28800', 'COMPILE-TIME', '28800', 'SESSION', 'BIGINT UNSIGNED', 'The number of seconds the server waits for activity on a connection before closing it', '1', '31536000', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PLUGIN_MATURITY', null, 'gamma', 'COMPILE-TIME', 'gamma', 'GLOBAL', 'ENUM', 'The lowest desirable plugin maturity. Plugins less mature than that will not be installed or loaded', null, null, null, 'unknown,experimental,alpha,beta,gamma,stable', 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SQL_SLAVE_SKIP_COUNTER', '0', '0', 'COMPILE-TIME', '0', 'SESSION', 'BIGINT UNSIGNED', 'Skip the next N events from the master log', '0', '4294967295', '1', null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_PURGE_THREADS', null, '4', 'COMPILE-TIME', '4', 'GLOBAL', 'BIGINT UNSIGNED', 'Purge threads can be from 1 to 32. Default is 4.', '1', '32', '0', null, 'YES', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SSL_CA', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'CA file in PEM format (check OpenSSL docs, implies --ssl)', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PROFILING', 'OFF', 'OFF', 'COMPILE-TIME', 'OFF', 'SESSION', 'BOOLEAN', 'If set to 1 (0 is default), statement profiling will be enabled. See SHOW PROFILES and SHOW PROFILE.', null, null, null, 'OFF,ON', 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_SST_DONOR_REJECTS_QUERIES', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Reject client queries when donating state snapshot transfer', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ARIA_PAGECACHE_BUFFER_SIZE', null, '134217728', 'COMPILE-TIME', '134217728', 'GLOBAL', 'BIGINT UNSIGNED', 'The size of the buffer used for index blocks for Aria tables. Increase this to get better index handling (for all reads and multiple writes) to as much as you can afford.', '131072', '18446744073709551615', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('RELAY_LOG_INDEX', null, '', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'The location and name to use for the file that keeps a list of the last relay logs.', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('EXPENSIVE_SUBQUERY_LIMIT', '100', '100', 'COMPILE-TIME', '100', 'SESSION', 'BIGINT UNSIGNED', 'The maximum number of rows a subquery may examine in order to be executed during optimization and used for constant optimization', '0', '18446744073709551615', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('GTID_IGNORE_DUPLICATES', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'When set, different master connections in multi-source replication are allowed to receive and process event groups with the same GTID (when using GTID mode). Only one will be applied, any others will be ignored. Within a given replication domain, just the sequence number will be used to decide whether a given GTID has been already applied; this means it is the responsibility of the user to ensure that GTID sequence numbers are strictly increasing.', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_BUFFER_POOL_DUMP_AT_SHUTDOWN', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'Dump the buffer pool into a file named @@innodb_buffer_pool_filename', null, null, null, 'OFF,ON', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_NOTIFY_CMD', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', '', null, null, null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SSL_CRLPATH', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'CRL directory (check OpenSSL docs, implies --ssl)', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_MAX_WS_ROWS', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'BIGINT UNSIGNED', 'Max number of rows in write set', '0', '1048576', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('DEADLOCK_SEARCH_DEPTH_LONG', '15', '15', 'COMPILE-TIME', '15', 'SESSION', 'BIGINT UNSIGNED', 'Long search depth for the two-step deadlock detection', '0', '33', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_FT_CACHE_SIZE', null, '8000000', 'COMPILE-TIME', '8000000', 'GLOBAL', 'BIGINT UNSIGNED', 'InnoDB Fulltext search cache size in bytes', '1600000', '80000000', '0', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MRR_BUFFER_SIZE', '262144', '262144', 'COMPILE-TIME', '262144', 'SESSION', 'BIGINT UNSIGNED', 'Size of buffer to use when using MRR with range access', '8192', '2147483647', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('RAND_SEED2', '962823945', null, 'COMPILE-TIME', '0', 'SESSION ONLY', 'BIGINT UNSIGNED', 'Sets the internal state of the RAND() generator for replication purposes', '0', '18446744073709551615', '1', null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_MAX_DIRTY_PAGES_PCT_LWM', null, '0.000000', 'COMPILE-TIME', '0.000000', 'GLOBAL', 'DOUBLE', 'Percentage of dirty pages at which flushing kicks in.', '0', '99.999', null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INSERT_ID', '0', null, 'COMPILE-TIME', '0', 'SESSION ONLY', 'BIGINT UNSIGNED', 'The value to be used by the following INSERT or ALTER TABLE statement when inserting an AUTO_INCREMENT value', '0', '18446744073709551615', '1', null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('IDLE_WRITE_TRANSACTION_TIMEOUT', '0', '0', 'COMPILE-TIME', '0', 'SESSION', 'INT UNSIGNED', 'The number of seconds the server waits for write idle transaction', '0', '31536000', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('QUERY_CACHE_STRIP_COMMENTS', 'OFF', 'OFF', 'COMPILE-TIME', 'OFF', 'SESSION', 'BOOLEAN', 'Strip all comments from a query before storing it in the query cache', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('FOREIGN_KEY_CHECKS', 'ON', 'ON', 'COMPILE-TIME', 'ON', 'SESSION', 'BOOLEAN', 'If set to 1 (the default) foreign key constraints (including ON UPDATE and ON DELETE behavior) InnoDB tables are checked, while if set to 0, they are not checked. 0 is not recommended for normal use, though it can be useful in situations where you know the data is consistent, but want to reload data in a different order from that that specified by parent/child relationships. Setting this variable to 1 does not retrospectively check for inconsistencies introduced while set to 0.', null, null, null, 'OFF,ON', 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('RELAY_LOG_BASENAME', null, '', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'The full path of the relay log file names, excluding the extension.', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_MONITOR_RESET', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Reset a monitor counter', null, null, null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_CLUSTER_NAME', null, 'my_wsrep_cluster', 'COMPILE-TIME', 'my_wsrep_cluster', 'GLOBAL', 'VARCHAR', 'Name for the cluster', null, null, null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_STATS_AUTO_RECALC', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'InnoDB automatic recalculation of persistent statistics enabled for all tables unless overridden at table level (automatic recalculation is only done when InnoDB decides that the table has changed too much and needs a new statistics)', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LOG_BIN_INDEX', null, '', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'File that holds the names for last binary log files.', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_COMMIT_CONCURRENCY', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'BIGINT UNSIGNED', 'Helps in performance tuning in heavily concurrent environments.', '0', '1000', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('NET_READ_TIMEOUT', '30', '30', 'COMPILE-TIME', '30', 'SESSION', 'BIGINT UNSIGNED', 'Number of seconds to wait for more data from a connection before aborting the read', '1', '31536000', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_CONCURRENCY_TICKETS', null, '5000', 'COMPILE-TIME', '5000', 'GLOBAL', 'BIGINT UNSIGNED', 'Number of times a thread is allowed to enter InnoDB within the same SQL query after it has once got the ticket', '1', '18446744073709551615', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LOG_BIN_BASENAME', null, '', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'The full path of the binary log file names, excluding the extension.', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_FATAL_SEMAPHORE_WAIT_THRESHOLD', null, '600', 'COMPILE-TIME', '600', 'GLOBAL', 'BIGINT UNSIGNED', 'Maximum number of seconds that semaphore times out in InnoDB.', '1', '4294967295', '0', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MAX_JOIN_SIZE', '18446744073709551615', '18446744073709551615', 'COMPILE-TIME', '18446744073709551615', 'SESSION', 'BIGINT UNSIGNED', 'Joins that are probably going to read more than max_join_size records return an error', '1', '18446744073709551615', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_IDLE_FLUSH_PCT', null, '100', 'COMPILE-TIME', '100', 'GLOBAL', 'BIGINT UNSIGNED', 'Up to what percentage of dirty pages should be flushed when innodb finds it has spare resources to do so.', '0', '100', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_MAX_FILE_HANDLES', null, '32768', 'COMPILE-TIME', '32768', 'GLOBAL', 'BIGINT UNSIGNED', 'Maximum number of opened instrumented files.', '0', '1048576', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_FT_SORT_PLL_DEGREE', null, '2', 'COMPILE-TIME', '2', 'GLOBAL', 'BIGINT UNSIGNED', 'InnoDB Fulltext search parallel sort degree, will round up to nearest power of 2 number', '1', '16', '0', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SLAVE_PARALLEL_MAX_QUEUED', null, '131072', 'COMPILE-TIME', '131072', 'GLOBAL', 'BIGINT UNSIGNED', 'Limit on how much memory SQL threads should use per parallel replication thread when reading ahead in the relay log looking for opportunities for parallel replication. Only used when --slave-parallel-threads > 0.', '0', '2147483647', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SESSION_TRACK_TRANSACTION_INFO', 'OFF', 'OFF', 'COMPILE-TIME', 'OFF', 'SESSION', 'ENUM', 'Track changes to the transaction attributes. OFF to disable; STATE to track just transaction state (Is there an active transaction? Does it have any data? etc.); CHARACTERISTICS to track transaction state and report all statements needed to start a transaction withthe same characteristics (isolation level, read only/read write,snapshot - but not any work done / data modified within the transaction).', null, null, null, 'OFF,STATE,CHARACTERISTICS', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SECURE_AUTH', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'Disallow authentication for accounts that have old (pre-4.1) passwords', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_FILL_FACTOR', null, '100', 'COMPILE-TIME', '100', 'GLOBAL', 'INT UNSIGNED', 'Percentage of B-tree page filled during bulk insert', '10', '100', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_PATCH_VERSION', null, 'wsrep_26.22', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'Wsrep patch version, for example wsrep_25.10.', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_ADAPTIVE_FLUSHING', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'Attempt flushing dirty pages to avoid IO bursts at checkpoints.', null, null, null, 'OFF,ON', 'NO', 'NONE');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('REPLICATE_IGNORE_DB', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Tell the slave to restrict replication to updates of tables whose names do not appear in the comma-separated list. For statement-based replication, only the default database (that is, the one selected by USE) is considered, not any explicitly mentioned tables in the query. For row-based replication, the actual names of table(s) being updated are checked.', null, null, null, null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_FILE_PER_TABLE', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'Stores each InnoDB table to an .ibd file in the database dir.', null, null, null, 'OFF,ON', 'NO', 'NONE');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('IGNORE_BUILTIN_INNODB', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Disable initialization of builtin InnoDB plugin', null, null, null, 'OFF,ON', 'YES', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('EXTRA_PORT', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'INT UNSIGNED', 'Extra port number to use for tcp connections in a one-thread-per-connection manner. 0 means don''t use another port', '0', '4294967295', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('TX_ISOLATION', 'REPEATABLE-READ', 'REPEATABLE-READ', 'COMPILE-TIME', 'REPEATABLE-READ', 'SESSION', 'ENUM', 'Default transaction isolation level', null, null, null, 'READ-UNCOMMITTED,READ-COMMITTED,REPEATABLE-READ,SERIALIZABLE', 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ARIA_BLOCK_SIZE', null, '8192', 'COMPILE-TIME', '8192', 'GLOBAL', 'BIGINT UNSIGNED', 'Block size to be used for Aria index pages.', '1024', '32768', '1024', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SESSION_TRACK_SYSTEM_VARIABLES', 'autocommit,character_set_client,character_set_connection,character_set_results,time_zone', 'autocommit,character_set_client,character_set_connection,character_set_results,time_zone', 'COMPILE-TIME', 'autocommit,character_set_client,character_set_connection,character_set_results,time_zone', 'SESSION', 'VARCHAR', 'Track changes in registered system variables. ', null, null, null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('THREAD_POOL_PRIO_KICKUP_TIMER', null, '1000', 'COMPILE-TIME', '1000', 'GLOBAL', 'INT UNSIGNED', 'The number of milliseconds before a dequeued low-priority statement is moved to the high-priority queue', '0', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SYNC_RELAY_LOG_INFO', null, '10000', 'COMPILE-TIME', '10000', 'GLOBAL', 'INT UNSIGNED', 'Synchronously flush relay log info to disk after every #th transaction. Use 0 to disable synchronous flushing', '0', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_DATA_HOME_DIR', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'The common part for InnoDB table spaces.', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('AUTO_INCREMENT_INCREMENT', '1', '1', 'COMPILE-TIME', '1', 'SESSION', 'BIGINT UNSIGNED', 'Auto-increment columns are incremented by this', '1', '65535', '1', null, 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_READ_IO_THREADS', null, '4', 'COMPILE-TIME', '4', 'GLOBAL', 'BIGINT UNSIGNED', 'Number of background read I/O threads in InnoDB.', '1', '64', '0', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('HISTOGRAM_SIZE', '254', '254', 'COMPILE-TIME', '254', 'SESSION', 'BIGINT UNSIGNED', 'Number of bytes used for a histogram. If set to 0, no histograms are created by ANALYZE.', '0', '255', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_WRITE_IO_THREADS', null, '4', 'COMPILE-TIME', '4', 'GLOBAL', 'BIGINT UNSIGNED', 'Number of background write I/O threads in InnoDB.', '1', '64', '0', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('JOIN_CACHE_LEVEL', '2', '2', 'COMPILE-TIME', '2', 'SESSION', 'BIGINT UNSIGNED', 'Controls what join operations can be executed with join buffers. Odd numbers are used for plain join buffers while even numbers are used for linked buffers', '0', '8', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_BUFFER_POOL_INSTANCES', null, '1', 'COMPILE-TIME', '0', 'GLOBAL', 'BIGINT UNSIGNED', 'Number of buffer pool instances, set to higher value on high-end machines to increase scalability', '0', '64', '0', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_RESTART_SLAVE', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Should MariaDB slave be restarted automatically, when node joins back to cluster', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_UNDO_DIRECTORY', null, './', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Directory where undo tablespace files live, this path can be absolute.', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SSL_CERT', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'X509 cert in PEM format (implies --ssl)', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('DIV_PRECISION_INCREMENT', '4', '4', 'COMPILE-TIME', '4', 'SESSION', 'BIGINT UNSIGNED', 'Precision of the result of ''/'' operator will be increased on that value', '0', '38', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('THREAD_CONCURRENCY', null, '10', 'COMPILE-TIME', '10', 'GLOBAL', 'BIGINT UNSIGNED', 'Permits the application to give the threads system a hint for the desired number of threads that should be run at the same time.This variable has no effect, and is deprecated. It will be removed in a future release.', '1', '512', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_FT_RESULT_CACHE_LIMIT', null, '2000000000', 'COMPILE-TIME', '2000000000', 'GLOBAL', 'BIGINT UNSIGNED', 'InnoDB Fulltext search query result cache limit in bytes', '1000000', '18446744073709551615', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LOG_TC_SIZE', null, '24576', 'AUTO', '24576', 'GLOBAL', 'BIGINT UNSIGNED', 'Size of transaction coordinator log.', '12288', '18446744073709551615', '4096', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_SYNC_WAIT', '0', '0', 'COMPILE-TIME', '0', 'SESSION', 'INT UNSIGNED', 'Ensure "synchronous" read view before executing an operation of the type specified by bitmask: 1 - READ(includes SELECT, SHOW and BEGIN/START TRANSACTION); 2 - UPDATE and DELETE; 4 - INSERT and REPLACE', '0', '15', '1', null, 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_MAX_TABLE_INSTANCES', null, '-1', 'COMPILE-TIME', '-1', 'GLOBAL', 'BIGINT', 'Maximum number of instrumented tables. Use 0 to disable, -1 for automated sizing.', '-1', '1048576', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_NODE_NAME', null, 'windoge-pc', 'COMPILE-TIME', 'windoge-pc', 'GLOBAL', 'VARCHAR', 'Name of this node. This name can be used in wsrep_sst_donor as a preferred donor. Note that multiple nodes in a cluster can have the same name.', null, null, null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('OLD', 'OFF', 'OFF', 'COMPILE-TIME', 'OFF', 'SESSION', 'BOOLEAN', 'Use compatible behavior from previous MariaDB version. See also --old-mode', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_ENCRYPTION_ROTATE_KEY_AGE', null, '1', 'COMPILE-TIME', '1', 'GLOBAL', 'INT UNSIGNED', 'Key rotation - re-encrypt in background all pages that were encrypted with a key that many (or more) versions behind. Value 0 indicates that key rotation is disabled.', '0', '4294967295', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LC_TIME_NAMES', 'en_US', 'en_US', 'COMPILE-TIME', 'en_US', 'SESSION', 'ENUM', 'Set the language used for the month names and the days of the week', null, null, null, null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('OPTIMIZER_TRACE', 'enabled=off', 'enabled=off', 'COMPILE-TIME', 'enabled=off', 'SESSION', 'FLAGSET', 'Controls tracing of the Optimizer: optimizer_trace=option=val[,option=val...], where option is one of {enabled} and val is one of {on, off, default}', null, null, null, 'enabled,default', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('TCP_KEEPALIVE_INTERVAL', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'INT', 'The interval, in seconds, between when successive keep-alive packets are sent if no acknowledgement is received.If set to 0, system dependent default is used.', '0', '2147483', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('FT_STOPWORD_FILE', null, '(built-in)', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Use stopwords from this file instead of built-in list', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('COLLATION_SERVER', 'utf8mb4_unicode_ci', 'utf8mb4_unicode_ci', 'COMPILE-TIME', 'utf8mb4_unicode_ci', 'SESSION', 'ENUM', 'The server default collation', null, null, null, null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_READ_AHEAD_THRESHOLD', null, '56', 'COMPILE-TIME', '56', 'GLOBAL', 'BIGINT UNSIGNED', 'Number of pages that must be accessed sequentially for InnoDB to trigger a readahead.', '0', '64', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('RPL_SEMI_SYNC_MASTER_WAIT_NO_SLAVE', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'Wait until timeout when no semi-synchronous replication slave available (enabled by default).', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_READ_ONLY', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Start InnoDB in read only mode (off by default)', null, null, null, 'OFF,ON', 'YES', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('HAVE_QUERY_CACHE', null, 'YES', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'If the server supports the query cache, will be set to YES, otherwise will be set to NO.', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_IMMEDIATE_SCRUB_DATA_UNCOMPRESSED', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Enable scrubbing of data', null, null, null, 'OFF,ON', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_CONVERT_LOCK_TO_TRX', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'To convert locking sessions into transactions', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_MONITOR_RESET_ALL', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Reset all values for a monitor counter', null, null, null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('GTID_BINLOG_POS', null, '', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'Last GTID logged to the binary log, per replicationdomain', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_OPTIMIZE_FULLTEXT_ONLY', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Only optimize the Fulltext index of the table', null, null, null, 'OFF,ON', 'NO', 'NONE');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LICENSE', null, 'GPL', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'The type of license the server has', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_STATS_METHOD', null, 'nulls_equal', 'COMPILE-TIME', 'nulls_equal', 'GLOBAL', 'ENUM', 'Specifies how InnoDB index statistics collection code should treat NULLs. Possible values are NULLS_EQUAL (default), NULLS_UNEQUAL and NULLS_IGNORED', null, null, null, 'nulls_equal,nulls_unequal,nulls_ignored', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('VERSION_SOURCE_REVISION', null, 'b8e655ce029a1f182602c9f12c3cc5931226eec2', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'Source control revision id for MariaDB source code', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SSL_CIPHER', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'SSL cipher to use (implies --ssl)', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('GTID_BINLOG_STATE', null, '', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'The internal GTID state of the binlog, used to keep track of all GTIDs ever logged to the binlog.', null, null, null, null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LOG_SLOW_RATE_LIMIT', '1', '1', 'COMPILE-TIME', '1', 'SESSION', 'BIGINT UNSIGNED', 'Write to slow log every #th slow query. Set to 1 to log everything. Increase it to reduce the size of the slow or the performance impact of slow logging', '1', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_LOAD_DATA_SPLITTING', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'To commit LOAD DATA transaction after every 10K rows inserted (deprecated)', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_THREAD_CONCURRENCY', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'BIGINT UNSIGNED', 'Helps in performance tuning in heavily concurrent environments. Sets the maximum number of threads allowed inside InnoDB. Value 0 will disable the thread throttling.', '0', '1000', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('GTID_STRICT_MODE', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Enforce strict seq_no ordering of events in the binary log. Slave stops with an error if it encounters an event that would cause it to generate an out-of-order binlog if executed.', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_BACKGROUND_SCRUB_DATA_UNCOMPRESSED', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Enable scrubbing of uncompressed data by background threads (same as encryption_threads)', null, null, null, 'OFF,ON', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SLAVE_TRANSACTION_RETRY_ERRORS', null, '1158,1159,1160,1161,1205,1213,1429,2013,12701', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Tells the slave thread to retry transaction for replication when a query event returns an error from the provided list. Deadlock error, elapsed lock wait timeout, net read error, net read timeout, net write error, net write timeout, connect error and 2 types of lost connection error are automatically added to this list', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_BUFFER_POOL_SIZE', null, '134217728', 'COMPILE-TIME', '134217728', 'GLOBAL', 'BIGINT UNSIGNED', 'The size of the memory buffer InnoDB uses to cache data and indexes of its tables.', '5242880', '9223372036854775807', '1048576', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LOG_OUTPUT', null, 'FILE', 'COMPILE-TIME', 'FILE', 'GLOBAL', 'SET', 'How logs should be written', null, null, null, 'NONE,FILE,TABLE', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LOCAL_INFILE', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'Enable LOAD DATA LOCAL INFILE', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('USERSTAT', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Enables statistics gathering for USER_STATISTICS, CLIENT_STATISTICS, INDEX_STATISTICS and TABLE_STATISTICS tables in the INFORMATION_SCHEMA', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_BUFFER_POOL_LOAD_NOW', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Trigger an immediate load of the buffer pool from a file named @@innodb_buffer_pool_filename', null, null, null, 'OFF,ON', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SYSTEM_TIME_ZONE', null, 'PST', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'The server system time zone', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('IGNORE_DB_DIRS', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Specifies a directory to add to the ignore list when collecting database names from the datadir. Put a blank argument to reset the list accumulated so far.', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SLAVE_TRANSACTION_RETRIES', null, '10', 'COMPILE-TIME', '10', 'GLOBAL', 'BIGINT UNSIGNED', 'Number of times the slave SQL thread will retry a transaction in case it failed with a deadlock, elapsed lock wait timeout or listed in slave_transaction_retry_errors, before giving up and stopping', '0', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('BINLOG_CHECKSUM', null, 'CRC32', 'COMPILE-TIME', 'CRC32', 'GLOBAL', 'ENUM', 'Type of BINLOG_CHECKSUM_ALG. Include checksum for log events in the binary log', null, null, null, 'NONE,CRC32', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_LOG_FILE_SIZE', null, '50331648', 'COMPILE-TIME', '50331648', 'GLOBAL', 'BIGINT UNSIGNED', 'Size of each log file in a log group.', '1048576', '549755813888', '65536', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_PAGE_SIZE', null, '16384', 'COMPILE-TIME', '16384', 'GLOBAL', 'BIGINT UNSIGNED', 'Page size to use for all InnoDB tablespaces.', '4096', '65536', '0', null, 'YES', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('GTID_POS_AUTO_ENGINES', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'List of engines for which to automatically create a mysql.gtid_slave_pos_ENGINE table, if a transaction using that engine is replicated. This can be used to avoid introducing cross-engine transactions, if engines are used different from that used by table mysql.gtid_slave_pos', null, null, null, null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ARIA_ENCRYPT_TABLES', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Encrypt tables (only for tables with ROW_FORMAT=PAGE (default) and not FIXED/DYNAMIC)', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('UNIQUE_CHECKS', 'ON', 'ON', 'COMPILE-TIME', 'ON', 'SESSION', 'BOOLEAN', 'If set to 1, the default, secondary indexes in InnoDB tables are performed. If set to 0, storage engines can (but are not required to) assume that duplicate keys are not present in input data. Set to 0 to speed up imports of large tables to InnoDB. The storage engine will still issue a duplicate key error if it detects one, even if set to 0.', null, null, null, 'OFF,ON', 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_EVENTS_STATEMENTS_HISTORY_LONG_SIZE', null, '-1', 'COMPILE-TIME', '-1', 'GLOBAL', 'BIGINT', 'Number of rows in EVENTS_STATEMENTS_HISTORY_LONG. Use 0 to disable, -1 for automated sizing.', '-1', '1048576', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('GENERAL_LOG_FILE', null, 'windoge-pc.log', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Log connections and queries to given file', null, null, null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('RPL_SEMI_SYNC_MASTER_WAIT_POINT', null, 'AFTER_COMMIT', 'COMPILE-TIME', 'AFTER_COMMIT', 'GLOBAL', 'ENUM', 'Should transaction wait for semi-sync ack after having synced binlog, or after having committed in storage engine.', null, null, null, 'AFTER_SYNC,AFTER_COMMIT', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('HAVE_RTREE_KEYS', null, 'YES', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'If RTREE indexes (used for spatial indexes) are available, will be set to YES, otherwise will be set to NO.', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ARIA_CHECKPOINT_LOG_ACTIVITY', null, '1048576', 'COMPILE-TIME', '1048576', 'GLOBAL', 'BIGINT UNSIGNED', 'Number of bytes that the transaction log has to grow between checkpoints before a new checkpoint is written to the log.', '0', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_LOG_GROUP_HOME_DIR', null, './', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Path to InnoDB log files.', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_FLUSH_LOG_AT_TRX_COMMIT', null, '1', 'COMPILE-TIME', '1', 'GLOBAL', 'BIGINT UNSIGNED', 'Controls the durability/speed trade-off for commits. Set to 0 (write and flush redo log to disk only once per second), 1 (flush to disk at each commit), 2 (write to log at commit but flush to disk only once per second) or 3 (flush to disk at prepare and at commit, slower and usually redundant). 1 and 3 guarantees that after a crash, committed transactions will not be lost and will be consistent with the binlog and other transactional engines. 2 can get inconsistent and lose transactions if there is a power failure or kernel crash but not if mysqld crashes. 0 has no guarantees in case of crash. 0 and 2 can be faster than 1 or 3.', '0', '3', '0', null, 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MYISAM_MMAP_SIZE', null, '18446744073709551615', 'COMPILE-TIME', '18446744073709551615', 'GLOBAL', 'BIGINT UNSIGNED', 'Restricts the total memory used for memory mapping of MySQL tables', '7', '18446744073709551615', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_PROVIDER_OPTIONS', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Semicolon (;) separated list of wsrep options (see wsrep_provider_options documentation).', null, null, null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('COLUMN_COMPRESSION_THRESHOLD', '100', '100', 'COMPILE-TIME', '100', 'SESSION', 'INT UNSIGNED', 'Minimum column data length eligible for compression', '0', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MAX_PREPARED_STMT_COUNT', null, '16382', 'COMPILE-TIME', '16382', 'GLOBAL', 'INT UNSIGNED', 'Maximum number of prepared statements in the server', '0', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_SST_RECEIVE_ADDRESS', null, 'AUTO', 'COMPILE-TIME', 'AUTO', 'GLOBAL', 'VARCHAR', 'Address where node is waiting for SST contact', null, null, null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_SST_DONOR', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'preferred donor node for the SST', null, null, null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ARIA_PAGECACHE_DIVISION_LIMIT', null, '100', 'COMPILE-TIME', '100', 'GLOBAL', 'BIGINT UNSIGNED', 'The minimum percentage of warm blocks in key cache', '1', '100', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_COMPRESSION_PAD_PCT_MAX', null, '50', 'COMPILE-TIME', '50', 'GLOBAL', 'BIGINT UNSIGNED', 'Percentage of empty space on a data page that can be reserved to make the page compressible.', '0', '75', '0', null, 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('IDENTITY', '0', null, 'COMPILE-TIME', '0', 'SESSION ONLY', 'BIGINT UNSIGNED', 'Synonym for the last_insert_id variable', '0', '18446744073709551615', '1', null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('KEY_CACHE_BLOCK_SIZE', null, '1024', 'COMPILE-TIME', '1024', 'GLOBAL', 'BIGINT UNSIGNED', 'The default size of key cache blocks', '512', '16384', '512', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_DEFRAGMENT', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Enable/disable InnoDB defragmentation (default FALSE). When set to FALSE, all existing defragmentation will be paused. And new defragmentation command will fail.Paused defragmentation commands will resume when this variable is set to true again.', null, null, null, 'OFF,ON', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SKIP_REPLICATION', 'OFF', null, 'COMPILE-TIME', 'OFF', 'SESSION ONLY', 'BOOLEAN', 'Changes are logged into the binary log with the @@skip_replication flag set. Such events will not be replicated by slaves that run with --replicate-events-marked-for-skip set different from its default of REPLICATE. See Selectively skipping replication of binlog events for more information.', null, null, null, 'OFF,ON', 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_PROVIDER', null, 'none', 'COMPILE-TIME', 'none', 'GLOBAL', 'VARCHAR', 'Path to replication provider library', null, null, null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('DEFAULT_STORAGE_ENGINE', 'InnoDB', 'InnoDB', 'COMPILE-TIME', 'InnoDB', 'SESSION', 'VARCHAR', 'The default storage engine for new tables', null, null, null, null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_DEFRAGMENT_FILL_FACTOR_N_RECS', null, '20', 'COMPILE-TIME', '20', 'GLOBAL', 'INT UNSIGNED', 'How many records of space defragmentation should leave on the page. This variable, together with innodb_defragment_fill_factor, is introduced so defragmentation won''t pack the page too full and cause page split on the next insert on every page. The variable indicating more defragmentation gain is the one effective.', '1', '100', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('DELAYED_INSERT_TIMEOUT', null, '300', 'COMPILE-TIME', '300', 'GLOBAL', 'BIGINT UNSIGNED', 'How long a INSERT DELAYED thread should wait for INSERT statements before terminating', '1', '31536000', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ARIA_PAGECACHE_AGE_THRESHOLD', null, '300', 'COMPILE-TIME', '300', 'GLOBAL', 'BIGINT UNSIGNED', 'This characterizes the number of hits a hot block has to be untouched until it is considered aged enough to be downgraded to a warm block. This specifies the percentage ratio of that number of hits to the total number of blocks in the page cache.', '100', '18446744073709551615', '100', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_BUFFER_POOL_CHUNK_SIZE', null, '134217728', 'COMPILE-TIME', '134217728', 'GLOBAL', 'BIGINT UNSIGNED', 'Size of a single memory chunk within each buffer pool instance for resizing buffer pool. Online buffer pool resizing happens at this granularity. 0 means disable resizing buffer pool.', '1048576', '9223372036854775807', '1048576', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ARIA_RECOVER_OPTIONS', null, 'BACKUP,QUICK', 'COMPILE-TIME', 'BACKUP,QUICK', 'GLOBAL', 'SET', 'Specifies how corrupted tables should be automatically repaired', null, null, null, 'NORMAL,BACKUP,FORCE,QUICK,OFF', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_CMP_PER_INDEX_ENABLED', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Enable INFORMATION_SCHEMA.innodb_cmp_per_index, may have negative impact on performance (off by default)', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_TRX_FRAGMENT_UNIT', 'bytes', 'bytes', 'COMPILE-TIME', 'bytes', 'SESSION', 'ENUM', 'Unit for streaming replication transaction fragments'' size: bytes, rows, statements', null, null, null, 'bytes,rows,statements', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_ONLINE_ALTER_LOG_MAX_SIZE', null, '134217728', 'COMPILE-TIME', '134217728', 'GLOBAL', 'BIGINT UNSIGNED', 'Maximum modification log file size for online index creation', '65536', '18446744073709551615', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SLAVE_SQL_VERIFY_CHECKSUM', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'Force checksum verification of replication events after reading them from relay log. Note: Events are always checksum-verified by slave on receiving them from the network before writing them to the relay log', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('UPDATABLE_VIEWS_WITH_LIMIT', 'YES', 'YES', 'COMPILE-TIME', 'YES', 'SESSION', 'ENUM', 'YES = Don''t issue an error message (warning only) if a VIEW without presence of a key of the underlying table is used in queries with a LIMIT clause for updating. NO = Prohibit update of a VIEW, which does not contain a key of the underlying table and the query uses a LIMIT clause (usually get from GUI tools)', null, null, null, 'NO,YES', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SQL_LOG_BIN', 'ON', 'ON', 'COMPILE-TIME', 'ON', 'SESSION', 'BOOLEAN', 'If set to 0 (1 is the default), no logging to the binary log is done for the client. Only clients with the SUPER privilege can update this variable. Can have unintended consequences if set globally, see SET SQL_LOG_BIN. Starting MariaDB 10.1.7, this variable does not affect the replication of events in a Galera cluster.', null, null, null, 'OFF,ON', 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WARNING_COUNT', '0', null, 'COMPILE-TIME', null, 'SESSION ONLY', 'BIGINT UNSIGNED', 'The number of errors, warnings, and notes that resulted from the last statement that generated messages', '0', '18446744073709551615', '1', null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MYISAM_STATS_METHOD', 'NULLS_UNEQUAL', 'NULLS_UNEQUAL', 'COMPILE-TIME', 'NULLS_UNEQUAL', 'SESSION', 'ENUM', 'Specifies how MyISAM index statistics collection code should treat NULLs. Possible values of name are NULLS_UNEQUAL (default behavior for 4.1 and later), NULLS_EQUAL (emulate 4.0 behavior), and NULLS_IGNORED', null, null, null, 'NULLS_UNEQUAL,NULLS_EQUAL,NULLS_IGNORED', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INIT_FILE', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Read SQL commands from this file at startup', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_COMPRESSION_LEVEL', null, '6', 'COMPILE-TIME', '6', 'GLOBAL', 'INT UNSIGNED', 'Compression level used for zlib compression.  0 is no compression, 1 is fastest, 9 is best compression and default is 6.', '0', '9', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_REPLICATE_MYISAM', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'To enable myisam replication', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('TABLE_OPEN_CACHE', null, '2000', 'COMPILE-TIME', '2000', 'GLOBAL', 'BIGINT UNSIGNED', 'The number of cached open tables', '10', '1048576', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SQL_QUOTE_SHOW_CREATE', 'ON', 'ON', 'COMPILE-TIME', 'ON', 'SESSION', 'BOOLEAN', 'If set to 1, the default, the server will quote identifiers for SHOW CREATE DATABASE, SHOW CREATE TABLE and SHOW CREATE VIEW statements. Quoting is disabled if set to 0. Enable to ensure replications works when identifiers require quoting.', null, null, null, 'OFF,ON', 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MAX_ERROR_COUNT', '64', '64', 'COMPILE-TIME', '64', 'SESSION', 'BIGINT UNSIGNED', 'Max number of errors/warnings to store for a statement', '0', '65535', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_NODE_ADDRESS', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Specifies the node''s network address, in the format ip address[:port]. Used in situations where autoguessing is not reliable. As of MariaDB 10.1.8, supports IPv6.', null, null, null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('FT_MIN_WORD_LEN', null, '4', 'COMPILE-TIME', '4', 'GLOBAL', 'BIGINT UNSIGNED', 'The minimum length of the word to be included in a FULLTEXT index. Note: FULLTEXT indexes must be rebuilt after changing this variable', '1', '84', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_CERTIFICATION_RULES', null, 'strict', 'COMPILE-TIME', 'strict', 'GLOBAL', 'ENUM', 'Certification rules to use in the cluster. Possible values are: "strict": stricter rules that could result in more certification failures. "optimized": relaxed rules that allow more concurrency and cause less certification failures.', null, null, null, 'strict,optimized', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_FORCED_BINLOG_FORMAT', null, 'NONE', 'COMPILE-TIME', 'NONE', 'GLOBAL', 'ENUM', 'binlog format to take effect over user''s choice', null, null, null, 'MIXED,STATEMENT,ROW,NONE', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PERFORMANCE_SCHEMA_MAX_TABLE_HANDLES', null, '-1', 'COMPILE-TIME', '-1', 'GLOBAL', 'BIGINT', 'Maximum number of opened instrumented tables. Use 0 to disable, -1 for automated sizing.', '-1', '1048576', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ARIA_FORCE_START_AFTER_RECOVERY_FAILURES', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'BIGINT UNSIGNED', 'Number of consecutive log recovery failures after which logs will be automatically deleted to cure the problem; 0 (the default) disables the feature.', '0', '255', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SYNC_BINLOG', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'INT UNSIGNED', 'Synchronously flush binary log to disk after every #th event. Use 0 (default) to disable synchronous flushing', '0', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_FLUSH_METHOD', null, 'fsync', 'COMPILE-TIME', 'fsync', 'GLOBAL', 'ENUM', 'With which method to flush data.', null, null, null, 'fsync,O_DSYNC,littlesync,nosync,O_DIRECT,O_DIRECT_NO_FSYNC', 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SLAVE_RUN_TRIGGERS_FOR_RBR', null, 'NO', 'COMPILE-TIME', 'NO', 'GLOBAL', 'ENUM', 'Modes for how triggers in row-base replication on slave side will be executed. Legal values are NO (default), YES and LOGGING. NO means that trigger for RBR will not be running on slave. YES and LOGGING means that triggers will be running on slave, if there was not triggers running on the master for the statement. LOGGING also means results of that the executed triggers work will be written to the binlog.', null, null, null, 'NO,YES,LOGGING', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('HAVE_PROFILING', null, 'YES', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'If statement profiling is available, will be set to YES, otherwise will be set to NO. See SHOW PROFILES and SHOW PROFILE.', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MYISAM_SORT_BUFFER_SIZE', '134216704', '134216704', 'COMPILE-TIME', '134216704', 'SESSION', 'BIGINT UNSIGNED', 'The buffer that is allocated when sorting the index when doing a REPAIR or when creating indexes with CREATE INDEX or ALTER TABLE', '4096', '18446744073709551615', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_SST_AUTH', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Authentication for SST connection', null, null, null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_OLD_BLOCKS_PCT', null, '37', 'COMPILE-TIME', '37', 'GLOBAL', 'INT UNSIGNED', 'Percentage of the buffer pool to reserve for ''old'' blocks.', '5', '95', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('STORAGE_ENGINE', 'InnoDB', 'InnoDB', 'COMPILE-TIME', 'InnoDB', 'SESSION', 'VARCHAR', 'Alias for @@default_storage_engine. Deprecated', null, null, null, null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ARIA_CHECKPOINT_INTERVAL', null, '30', 'COMPILE-TIME', '30', 'GLOBAL', 'BIGINT UNSIGNED', 'Interval between tries to do an automatic checkpoints. In seconds; 0 means ''no automatic checkpoints'' which makes sense only for testing.', '0', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_LOCKS_UNSAFE_FOR_BINLOG', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'DEPRECATED. This option may be removed in future releases. Please use READ COMMITTED transaction isolation level instead. Force InnoDB to not use next-key locking, to use only row-level locking.', null, null, null, 'OFF,ON', 'YES', 'NONE');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_FORCE_RECOVERY', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'BIGINT UNSIGNED', 'Helps to save your data in case the disk image of the database becomes corrupt.', '0', '6', '0', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SQL_SAFE_UPDATES', 'OFF', 'OFF', 'COMPILE-TIME', 'OFF', 'SESSION', 'BOOLEAN', 'If set to 1, UPDATEs and DELETEs need either a key in the WHERE clause, or a LIMIT clause, or else they will aborted. Prevents the common mistake of accidentally deleting or updating every row in a table.', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SLAVE_PARALLEL_MODE', null, 'conservative', 'COMPILE-TIME', 'conservative', 'GLOBAL', 'ENUM', 'Controls what transactions are applied in parallel when using --slave-parallel-threads. Possible values: "optimistic" tries to apply most transactional DML in parallel, and handles any conflicts with rollback and retry. "conservative" limits parallelism in an effort to avoid any conflicts. "aggressive" tries to maximise the parallelism, possibly at the cost of increased conflict rate. "minimal" only parallelizes the commit steps of transactions. "none" disables parallel apply completely.', null, null, null, 'none,minimal,conservative,optimistic,aggressive', 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('RPL_SEMI_SYNC_SLAVE_ENABLED', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Enable semi-synchronous replication slave (disabled by default).', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SKIP_SHOW_DATABASE', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Don''t allow ''SHOW DATABASE'' commands', null, null, null, 'OFF,ON', 'YES', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MYISAM_USE_MMAP', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Use memory mapping for reading and writing MyISAM tables', null, null, null, 'OFF,ON', 'NO', 'NONE');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('AUTOCOMMIT', 'ON', 'ON', 'COMPILE-TIME', 'ON', 'SESSION', 'BOOLEAN', 'If set to 1, the default, all queries are committed immediately. If set to 0, they are only committed upon a COMMIT statement, or rolled back with a ROLLBACK statement. If autocommit is set to 0, and then changed to 1, all open transactions are immediately committed.', null, null, null, 'OFF,ON', 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_BUFFER_POOL_LOAD_AT_STARTUP', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'Load the buffer pool from a file named @@innodb_buffer_pool_filename', null, null, null, 'OFF,ON', 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('EQ_RANGE_INDEX_DIVE_LIMIT', '200', '200', 'COMPILE-TIME', '200', 'SESSION', 'INT UNSIGNED', 'The optimizer will use existing index statistics instead of doing index dives for equality ranges if the number of equality ranges for the index is larger than or equal to this number. If set to 0, index dives are always used.', '0', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('VERSION', null, '10.4.6-MariaDB', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'Server version number. It may also include a suffix with configuration or build information. -debug indicates debugging support was enabled on the server, and -log indicates at least one of the binary log, general log or slow query log are enabled, for example 10.1.1-MariaDB-mariadb1precise-log.', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LOG_SLAVE_UPDATES', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Tells the slave to log the updates from the slave thread to the binary log. You will need to turn it on if you plan to daisy-chain the slaves.', null, null, null, 'OFF,ON', 'YES', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_LOG_OPTIMIZE_DDL', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'Reduce redo logging when natively creating indexes or rebuilding tables. Setting this OFF avoids delay due to page flushing and allows concurrent backup.', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_CHECKSUMS', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'DEPRECATED. Use innodb_checksum_algorithm=NONE instead of setting this to OFF. Enable InnoDB checksums validation (enabled by default). Disable with --skip-innodb-checksums.', null, null, null, 'OFF,ON', 'YES', 'NONE');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_FLUSH_SYNC', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'Allow IO bursts at the checkpoints ignoring io_capacity setting.', null, null, null, 'OFF,ON', 'NO', 'NONE');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('TRANSACTION_PREALLOC_SIZE', '4096', '4096', 'COMPILE-TIME', '4096', 'SESSION', 'BIGINT UNSIGNED', 'Persistent buffer for transactions to be stored in binary log', '1024', '134217728', '1024', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_GTID_MODE', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Automatically update the (joiner) node''s wsrep_gtid_domain_id value with that of donor''s (received during state transfer) and use it in place of gtid_domain_id for all galera transactions. When OFF (default), wsrep_gtid_domain_id is simply ignored (backward compatibility).', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('VERSION_COMPILE_OS', null, 'Linux', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'Operating system that MariaDB was built on, for example debian-linux-gnu.', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_OPEN_FILES', null, '2000', 'COMPILE-TIME', '0', 'GLOBAL', 'BIGINT UNSIGNED', 'How many files at the maximum InnoDB keeps open at the same time.', '0', '9223372036854775807', '0', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('DEBUG_NO_THREAD_ALARM', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Disable system thread alarm calls. Disabling it may be useful in debugging or testing, never do it in production', null, null, null, 'OFF,ON', 'YES', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_LOG_FILES_IN_GROUP', null, '2', 'COMPILE-TIME', '2', 'GLOBAL', 'BIGINT UNSIGNED', 'Number of log files in the log group. InnoDB writes to the files in a circular fashion.', '1', '100', '0', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SYNC_MASTER_INFO', null, '10000', 'COMPILE-TIME', '10000', 'GLOBAL', 'INT UNSIGNED', 'Synchronously flush master info to disk after every #th event. Use 0 to disable synchronous flushing', '0', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('PLUGIN_DIR', null, '/usr/lib/mysql/plugin/', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Directory for plugins', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SKIP_NAME_RESOLVE', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Don''t resolve hostnames. All hostnames are IP''s or ''localhost''.', null, null, null, 'OFF,ON', 'YES', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_DEADLOCK_DETECT', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'Enable/disable InnoDB deadlock detector (default ON). if set to OFF, deadlock detection is skipped, and we rely on innodb_lock_wait_timeout in case of deadlock.', null, null, null, 'OFF,ON', 'NO', 'NONE');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('IDLE_READONLY_TRANSACTION_TIMEOUT', '0', '0', 'COMPILE-TIME', '0', 'SESSION', 'INT UNSIGNED', 'The number of seconds the server waits for read-only idle transaction', '0', '31536000', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_FT_MAX_TOKEN_SIZE', null, '84', 'COMPILE-TIME', '84', 'GLOBAL', 'BIGINT UNSIGNED', 'InnoDB Fulltext search maximum token size in characters', '10', '84', '0', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('REPLICATE_EVENTS_MARKED_FOR_SKIP', null, 'REPLICATE', 'COMPILE-TIME', 'REPLICATE', 'GLOBAL', 'ENUM', 'Whether the slave should replicate events that were created with @@skip_replication=1 on the master. Default REPLICATE (no events are skipped). Other values are FILTER_ON_SLAVE (events will be sent by the master but ignored by the slave) and FILTER_ON_MASTER (events marked with @@skip_replication=1 will be filtered on the master and never be sent to the slave).', null, null, null, 'REPLICATE,FILTER_ON_SLAVE,FILTER_ON_MASTER', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_FT_SERVER_STOPWORD_TABLE', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'The user supplied stopword table name.', null, null, null, null, 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('REPLICATE_DO_DB', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Tell the slave to restrict replication to updates of tables whose names appear in the comma-separated list. For statement-based replication, only the default database (that is, the one selected by USE) is considered, not any explicitly mentioned tables in the query. For row-based replication, the actual names of table(s) being updated are checked.', null, null, null, null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INTERACTIVE_TIMEOUT', '28800', '28800', 'COMPILE-TIME', '28800', 'SESSION', 'BIGINT UNSIGNED', 'The number of seconds the server waits for activity on an interactive connection before closing it', '1', '31536000', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_OSU_METHOD', 'TOI', 'TOI', 'COMPILE-TIME', 'TOI', 'SESSION', 'ENUM', 'Method for Online Schema Upgrade', null, null, null, 'TOI,RSU', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('KEY_CACHE_SEGMENTS', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'BIGINT UNSIGNED', 'The number of segments in a key cache', '0', '64', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_LARGE_PREFIX', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Deprecated parameter with no effect.', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_DEFRAGMENT_N_PAGES', null, '7', 'COMPILE-TIME', '7', 'GLOBAL', 'INT UNSIGNED', 'Number of pages considered at once when merging multiple pages to defragment', '2', '32', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('TCP_NODELAY', 'ON', 'ON', 'COMPILE-TIME', 'ON', 'SESSION', 'BOOLEAN', 'Set option TCP_NODELAY (disable Nagle''s algorithm) on socket', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LOG_SLOW_FILTER', 'admin,filesort,filesort_on_disk,filesort_priority_queue,full_join,full_scan,query_cache,query_cache_miss,tmp_table,tmp_table_on_disk', 'admin,filesort,filesort_on_disk,filesort_priority_queue,full_join,full_scan,query_cache,query_cache_miss,tmp_table,tmp_table_on_disk', 'COMPILE-TIME', 'admin,filesort,filesort_on_disk,filesort_priority_queue,full_join,full_scan,query_cache,query_cache_miss,tmp_table,tmp_table_on_disk', 'SESSION', 'SET', 'Log only certain types of queries to the slow log. If variable empty alll kind of queries are logged.  All types are bound by slow_query_time, except ''not_using_index'' which is always logged if enabled', null, null, null, 'admin,filesort,filesort_on_disk,filesort_priority_queue,full_join,full_scan,not_using_index,query_cache,query_cache_miss,tmp_table,tmp_table_on_disk', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_LOG_CHECKSUMS', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'Whether to compute and require checksums for InnoDB redo log blocks', null, null, null, 'OFF,ON', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_MYSQL_REPLICATION_BUNDLE', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'BIGINT UNSIGNED', 'mysql replication group commit ', '0', '1000', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SLAVE_DOMAIN_PARALLEL_THREADS', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'BIGINT UNSIGNED', 'Maximum number of parallel threads to use on slave for events in a single replication domain. When using multiple domains, this can be used to limit a single domain from grabbing all threads and thus stalling other domains. The default of 0 means to allow a domain to grab as many threads as it wants, up to the value of slave_parallel_threads.', '0', '16383', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_DATA_FILE_PATH', null, 'ibdata1:12M:autoextend', 'COMPILE-TIME', 'ibdata1:12M:autoextend', 'GLOBAL', 'VARCHAR', 'Path to individual files and their sizes.', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ENFORCE_STORAGE_ENGINE', '', '', 'COMPILE-TIME', null, 'SESSION', 'VARCHAR', 'Force the use of a storage engine for new tables', null, null, null, null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('THREAD_STACK', null, '299008', 'COMPILE-TIME', '299008', 'GLOBAL', 'BIGINT UNSIGNED', 'The stack size for each thread', '131072', '18446744073709551615', '1024', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_FT_ENABLE_DIAG_PRINT', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Whether to enable additional FTS diagnostic printout ', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MAX_PASSWORD_ERRORS', null, '4294967295', 'COMPILE-TIME', '4294967295', 'GLOBAL', 'INT UNSIGNED', 'If there is more than this number of failed connect attempts due to invalid password, user will be blocked from further connections until FLUSH_PRIVILEGES.', '1', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('HAVE_SYMLINK', null, 'YES', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'If symbolic link support is enabled, will be set to YES, otherwise will be set to NO. Required for the INDEX DIRECTORY and DATA DIRECTORY table options (see CREATE TABLE) and Windows symlink support. Will be set to DISABLED if the server is started with the --skip-symbolic-links option.', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SQL_NOTES', 'ON', 'ON', 'COMPILE-TIME', 'ON', 'SESSION', 'BOOLEAN', 'If set to 1, the default, warning_count is incremented each time a Note warning is encountered. If set to 0, Note warnings are not recorded. mysqldump has outputs to set this variable to 0 so that no unnecessary increments occur when data is reloaded.', null, null, null, 'OFF,ON', 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_FT_AUX_TABLE', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'FTS internal auxiliary table to be checked', null, null, null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ARIA_PAGECACHE_FILE_HASH_SIZE', null, '512', 'COMPILE-TIME', '512', 'GLOBAL', 'BIGINT UNSIGNED', 'Number of hash buckets for open and changed files.  If you have a lot of Aria files open you should increase this for faster flush of changes. A good value is probably 1/10 of number of possible open Aria files.', '128', '16384', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_FLUSH_NEIGHBORS', null, '1', 'COMPILE-TIME', '1', 'GLOBAL', 'BIGINT UNSIGNED', 'Set to 0 (don''t flush neighbors from buffer pool), 1 (flush contiguous neighbors from buffer pool) or 2 (flush neighbors from buffer pool), when flushing a block', '0', '2', '0', null, 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_LOG_WRITE_AHEAD_SIZE', null, '8192', 'COMPILE-TIME', '8192', 'GLOBAL', 'BIGINT UNSIGNED', 'Redo log write ahead unit size to avoid read-on-write, it should match the OS cache block IO size', '512', '16384', '512', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SECURE_TIMESTAMP', null, 'NO', 'COMPILE-TIME', 'NO', 'GLOBAL', 'ENUM', 'Restricts direct setting of a session timestamp. Possible levels are: YES - timestamp cannot deviate from the system clock, REPLICATION - replication thread can adjust timestamp to match the master''s, SUPER - a user with this privilege and a replication thread can adjust timestamp, NO - historical behavior, anyone can modify session timestamp', null, null, null, 'NO,SUPER,REPLICATION,YES', 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('CHECK_CONSTRAINT_CHECKS', 'ON', 'ON', 'COMPILE-TIME', 'ON', 'SESSION', 'BOOLEAN', 'check_constraint_checks', null, null, null, 'OFF,ON', 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SSL_KEY', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'X509 key in PEM format (implies --ssl)', null, null, null, null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ARIA_SORT_BUFFER_SIZE', '268434432', '268434432', 'COMPILE-TIME', '268434432', 'SESSION', 'BIGINT UNSIGNED', 'The buffer that is allocated when sorting the index when doing a REPAIR or when creating indexes with CREATE INDEX or ALTER TABLE.', '4096', '18446744073709551615', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_THREAD_SLEEP_DELAY', null, '10000', 'COMPILE-TIME', '10000', 'GLOBAL', 'BIGINT UNSIGNED', 'Time of innodb thread sleeping before joining InnoDB queue (usec). Value 0 disable a sleep', '0', '1000000', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_PAGE_CLEANERS', null, '1', 'COMPILE-TIME', '4', 'GLOBAL', 'BIGINT UNSIGNED', 'Page cleaner threads can be from 1 to 64. Default is 4.', '1', '64', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_RECOVER', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Recover database state after crash and exit', null, null, null, 'OFF,ON', 'YES', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_FORCE_LOAD_CORRUPTED', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Force InnoDB to load metadata of corrupted table.', null, null, null, 'OFF,ON', 'YES', 'NONE');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('GTID_CLEANUP_BATCH_SIZE', null, '64', 'COMPILE-TIME', '64', 'GLOBAL', 'INT UNSIGNED', 'Normally does not need tuning. How many old rows must accumulate in the mysql.gtid_slave_pos table before a background job will be run to delete them. Can be increased to reduce number of commits if using many different engines with --gtid_pos_auto_engines, or to reduce CPU overhead if using a huge number of different gtid_domain_ids. Can be decreased to reduce number of old rows in the table.', '0', '2147483647', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LOG_BIN', null, 'OFF', 'COMPILE-TIME', null, 'GLOBAL', 'BOOLEAN', 'Whether the binary log is enabled', null, null, null, 'OFF,ON', 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MYSQL56_TEMPORAL_FORMAT', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'Use MySQL-5.6 (instead of MariaDB-5.3) format for TIME, DATETIME, TIMESTAMP columns.', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('REPLICATE_WILD_IGNORE_TABLE', null, '', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Tells the slave thread to not replicate to the tables that match the given wildcard pattern.', null, null, null, null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MAX_SEEKS_FOR_KEY', '4294967295', '4294967295', 'COMPILE-TIME', '4294967295', 'SESSION', 'BIGINT UNSIGNED', 'Limit assumed max number of seeks when looking up rows based on a key', '1', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('DEADLOCK_TIMEOUT_SHORT', '10000', '10000', 'COMPILE-TIME', '10000', 'SESSION', 'BIGINT UNSIGNED', 'Short timeout for the two-step deadlock detection (in microseconds)', '0', '4294967295', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_REPLICATION_DELAY', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'BIGINT UNSIGNED', 'Replication thread delay (ms) on the slave server if innodb_thread_concurrency is reached (0 by default)', '0', '18446744073709551615', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SLOW_QUERY_LOG_FILE', null, 'windoge-pc-slow.log', 'COMPILE-TIME', '', 'GLOBAL', 'VARCHAR', 'Log slow queries to given log file. Defaults logging to ''hostname''-slow.log. Must be enabled to activate other slow log options', null, null, null, null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('QUERY_CACHE_MIN_RES_UNIT', null, '4096', 'COMPILE-TIME', '4096', 'GLOBAL', 'BIGINT UNSIGNED', 'The minimum size for blocks allocated by the query cache', '0', '4294967295', '8', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_DESYNC', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'To desynchronize the node from the cluster', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ARIA_GROUP_COMMIT', null, 'none', 'COMPILE-TIME', 'none', 'GLOBAL', 'ENUM', 'Specifies Aria group commit mode. Possible values are "none" (no group commit), "hard" (with waiting to actual commit), "soft" (no wait for commit (DANGEROUS!!!))', null, null, null, 'none,hard,soft', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SESSION_TRACK_STATE_CHANGE', 'OFF', 'OFF', 'COMPILE-TIME', 'OFF', 'SESSION', 'BOOLEAN', 'Track changes to the session state.', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('COLLATION_CONNECTION', 'utf8mb4_general_ci', 'utf8mb4_unicode_ci', 'COMPILE-TIME', 'utf8mb4_unicode_ci', 'SESSION', 'ENUM', 'The collation of the connection character set', null, null, null, null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('MAX_ALLOWED_PACKET', '16777216', '16777216', 'COMPILE-TIME', '16777216', 'SESSION', 'BIGINT UNSIGNED', 'Max packet length to send to or receive from the server', '1024', '1073741824', '1024', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('TIME_ZONE', 'SYSTEM', 'SYSTEM', 'COMPILE-TIME', 'SYSTEM', 'SESSION', 'VARCHAR', 'The current time zone, used to initialize the time zone for a client when it connects. Set to SYSTEM by default, in which the client uses the system time zone value.', null, null, null, null, 'NO', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('RELAY_LOG_RECOVERY', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Enables automatic relay log recovery right after the database startup, which means that the IO Thread starts re-fetching from the master right after the last transaction processed.', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('LARGE_PAGE_SIZE', null, '0', 'COMPILE-TIME', null, 'GLOBAL', 'INT UNSIGNED', 'If large page support is enabled, this shows the size of memory pages', '0', '4294967295', '1', null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_VERSION', null, '10.4.6', 'COMPILE-TIME', null, 'GLOBAL', 'VARCHAR', 'InnoDB version', null, null, null, null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('READ_RND_BUFFER_SIZE', '262144', '262144', 'COMPILE-TIME', '262144', 'SESSION', 'BIGINT UNSIGNED', 'When reading rows in sorted order after a sort, the rows are read through this buffer to avoid a disk seeks', '1', '2147483647', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_TABLE_LOCKS', 'ON', 'ON', 'COMPILE-TIME', 'ON', 'SESSION', 'BOOLEAN', 'Enable InnoDB locking in LOCK TABLES', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('IN_TRANSACTION', '0', null, 'COMPILE-TIME', null, 'SESSION ONLY', 'BIGINT UNSIGNED', 'Whether there is an active transaction', '0', '1', '1', null, 'YES', null);
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_FORCE_PRIMARY_KEY', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Do not allow to create table without primary key (off by default)', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ARIA_LOG_FILE_SIZE', null, '1073741824', 'COMPILE-TIME', '1073741824', 'GLOBAL', 'BIGINT UNSIGNED', 'Limit for transaction log size', '8388608', '4294967295', '8192', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('RELAY_LOG_PURGE', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'if disabled - do not purge relay logs. if enabled - purge them as soon as they are no more needed.', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('OPTIMIZER_SEARCH_DEPTH', '62', '62', 'COMPILE-TIME', '62', 'SESSION', 'BIGINT UNSIGNED', 'Maximum depth of search performed by the query optimizer. Values larger than the number of relations in a query result in better query plans, but take longer to compile a query. Values smaller than the number of tables in a relation result in faster optimization, but may produce very bad query plans. If set to 0, the system will automatically pick a reasonable value.', '0', '62', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_FT_TOTAL_CACHE_SIZE', null, '640000000', 'COMPILE-TIME', '640000000', 'GLOBAL', 'BIGINT UNSIGNED', 'Total memory allocated for InnoDB Fulltext Search cache', '32000000', '1600000000', '0', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('TCP_KEEPALIVE_TIME', null, '0', 'COMPILE-TIME', '0', 'GLOBAL', 'INT', 'Timeout, in milliseconds, with no activity until the first TCP keep-alive packet is sent.If set to 0, system dependent default is used.', '0', '2147483', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('ARIA_PAGE_CHECKSUM', null, 'ON', 'COMPILE-TIME', 'ON', 'GLOBAL', 'BOOLEAN', 'Maintain page checksums (can be overridden per table with PAGE_CHECKSUM clause in CREATE TABLE)', null, null, null, 'OFF,ON', 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('READ_ONLY', null, 'OFF', 'COMPILE-TIME', 'OFF', 'GLOBAL', 'BOOLEAN', 'Make all non-temporary tables read-only, with the exception for replication (slave) threads and users with the SUPER privilege', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('SESSION_TRACK_SCHEMA', 'ON', 'ON', 'COMPILE-TIME', 'ON', 'SESSION', 'BOOLEAN', 'Track changes to the default schema.', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_FAST_SHUTDOWN', null, '1', 'COMPILE-TIME', '1', 'GLOBAL', 'INT UNSIGNED', 'Speeds up the shutdown process of the InnoDB storage engine. Possible values are 0, 1 (faster), 2 (crash-like), 3 (fastest clean).', '0', '3', '0', null, 'NO', 'OPTIONAL');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('IDLE_TRANSACTION_TIMEOUT', '0', '0', 'COMPILE-TIME', '0', 'SESSION', 'INT UNSIGNED', 'The number of seconds the server waits for idle transaction', '0', '31536000', '1', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_ADAPTIVE_MAX_SLEEP_DELAY', null, '150000', 'COMPILE-TIME', '150000', 'GLOBAL', 'BIGINT UNSIGNED', 'The upper limit of the sleep delay in usec. Value of 0 disables it.', '0', '1000000', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('BACK_LOG', null, '80', 'AUTO', '150', 'GLOBAL', 'BIGINT UNSIGNED', 'The number of outstanding connection requests MariaDB can have. This comes into play when the main MariaDB thread gets very many connection requests in a very short time', '0', '65535', '1', null, 'YES', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_SYNC_SPIN_LOOPS', null, '30', 'COMPILE-TIME', '30', 'GLOBAL', 'BIGINT UNSIGNED', 'Count of spin-loop rounds in InnoDB mutexes (30 by default)', '0', '18446744073709551615', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('INNODB_STATS_PERSISTENT_SAMPLE_PAGES', null, '20', 'COMPILE-TIME', '20', 'GLOBAL', 'BIGINT UNSIGNED', 'The number of leaf index pages to sample when calculating persistent statistics (by ANALYZE, default 20)', '1', '18446744073709551615', '0', null, 'NO', 'REQUIRED');
INSERT INTO information_schema.SYSTEM_VARIABLES (VARIABLE_NAME, SESSION_VALUE, GLOBAL_VALUE, GLOBAL_VALUE_ORIGIN, DEFAULT_VALUE, VARIABLE_SCOPE, VARIABLE_TYPE, VARIABLE_COMMENT, NUMERIC_MIN_VALUE, NUMERIC_MAX_VALUE, NUMERIC_BLOCK_SIZE, ENUM_VALUE_LIST, `READ_ONLY`, COMMAND_LINE_ARGUMENT) VALUES ('WSREP_DIRTY_READS', 'OFF', 'OFF', 'COMPILE-TIME', 'OFF', 'SESSION', 'BOOLEAN', 'Allow reads even when the node is not in the primary component.', null, null, null, 'OFF,ON', 'NO', 'OPTIONAL');